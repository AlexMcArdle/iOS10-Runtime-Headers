/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@interface UIView : UIResponder <CALayerDelegate, NSCoding, NSISEngineDelegate, NSISVariableDelegate, UIAppearance, UIAppearanceContainer, UICoordinateSpace, UIDynamicItem, UIFocusContainer, UIFocusItem, UITextEffectsOrdering, UITraitEnvironment, _UIFocusEnvironmentInternal, _UIFocusEnvironmentPrivate, _UIFocusRegionContainer, _UIFocusRegionContainerInternal, _UIGeometryChangeObserver, _UILayoutItem, _UILegacyFocusRegion, _UIMultilineTextContentSizing, _UIScrollNotification, _UITraitEnvironmentInternal> {
    long long  __preferedContentsFormat;
    UIPresentationController * __presentationControllerToNotifyOnLayoutSubviews;
    NSString * _backgroundColorSystemColorName;
    NSISVariable * _boundsHeightVariable;
    NSISVariable * _boundsWidthVariable;
    double  _cachedScreenScale;
    UITraitCollection * _cachedTraitCollection;
    float  _charge;
    NSMutableArray * _constraintsExceptingSubviewAutoresizingConstraints;
    id  _contentSizeNotificationToken;
    double  _continuousCornerRadius;
    unsigned long long  _countOfFocusedAncestorTrackingViewsInSubtree;
    unsigned long long  _countOfMotionEffectsInSubtree;
    unsigned long long  _countOfTraitChangeRespondersInDirectSubtree;
    id  _gestureInfo;
    NSMutableArray * _gestureRecognizers;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _inferredLayoutMargins;
    UIColor * _interactionTintColor;
    NSMutableArray * _internalConstraints;
    CALayer * _layer;
    CALayer * _layerRetained;
    NSString * _layoutDebuggingIdentifier;
    NSISEngine * _layoutEngine;
    UILayoutGuide * _layoutMarginsGuide;
    long long  _layoutSubviewsCount;
    NSISVariable * _minXVariable;
    NSISVariable * _minYVariable;
    UIStoryboardPreviewingSegueTemplateStorage * _previewingSegueTemplateStorage;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _rawLayoutMargins;
    UILayoutGuide * _readableContentGuide;
    long long  _retainCount;
    long long  _semanticContentAttribute;
    bool  _shouldArchiveUIAppearanceTags;
    NSMapTable * _stashedLayoutVariableObservations;
    NSArray * _subviewCache;
    long long  _tag;
    UIView * _templateLayoutView;
    long long  _tintAdjustmentDimmingCount;
    unsigned long long  _unsatisfiableConstraintsLoggingSuspensionCount;
    UIViewController * _viewDelegate;
    struct { 
        unsigned int userInteractionDisabled : 1; 
        unsigned int implementsDrawRect : 1; 
        unsigned int implementsDidScroll : 1; 
        unsigned int implementsMouseTracking : 1; 
        unsigned int implementsIntrinsicContentSize : 1; 
        unsigned int hasBackgroundColor : 1; 
        unsigned int isOpaque : 1; 
        unsigned int becomeFirstResponderWhenCapable : 1; 
        unsigned int interceptMouseEvent : 1; 
        unsigned int deallocating : 1; 
        unsigned int debugFlash : 1; 
        unsigned int isAncestorOfFirstResponder : 1; 
        unsigned int dontAutoresizeSubviews : 1; 
        unsigned int autoresizeMask : 6; 
        unsigned int patternBackground : 1; 
        unsigned int fixedBackgroundPattern : 1; 
        unsigned int dontAnimate : 1; 
        unsigned int superLayerIsView : 1; 
        unsigned int layerKitPatternDrawing : 1; 
        unsigned int multipleTouchEnabled : 1; 
        unsigned int exclusiveTouch : 1; 
        unsigned int hasViewController : 1; 
        unsigned int needsDidAppearOrDisappear : 1; 
        unsigned int gesturesEnabled : 1; 
        unsigned int deliversTouchesForGesturesToSuperview : 1; 
        unsigned int deliversButtonsForGesturesToSuperview : 1; 
        unsigned int chargeEnabled : 1; 
        unsigned int skipsSubviewEnumeration : 1; 
        unsigned int needsDisplayOnBoundsChange : 1; 
        unsigned int hasTiledLayer : 1; 
        unsigned int hasLargeContent : 1; 
        unsigned int unused : 1; 
        unsigned int traversalMark : 1; 
        unsigned int appearanceIsInvalid : 1; 
        unsigned int monitorsSubtree : 1; 
        unsigned int hostsAutolayoutEngine : 1; 
        unsigned int constraintsAreClean : 1; 
        unsigned int subviewLayoutConstraintsAreClean : 1; 
        unsigned int intrinsicContentSizeConstraintsAreClean : 1; 
        unsigned int strictDescendantNeedsDoubleUpdateConstraints : 1; 
        unsigned int strictDescendantNeedsDoubleUpdateConstraintsIsInvalid : 1; 
        unsigned int determiningWidthForDoubleUpdateConstraints : 1; 
        unsigned int inSecondConstraintsPass : 1; 
        unsigned int potentiallyHasDanglyConstraints : 1; 
        unsigned int doesNotTranslateAutoresizingMaskIntoConstraints : 1; 
        unsigned int autolayoutIsClean : 1; 
        unsigned int autolayoutBoundsAreClean : 1; 
        unsigned int layoutFlushingDisabled : 1; 
        unsigned int layingOutFromConstraints : 1; 
        unsigned int wantsAutolayout : 1; 
        unsigned int subviewWantsAutolayout : 1; 
        unsigned int isApplyingValuesFromEngine : 1; 
        unsigned int isInAutolayout : 1; 
        unsigned int isInAnimatedLayout : 1; 
        unsigned int isSubviewUpdatingAutoresizingConstraints : 1; 
        unsigned int isUpdatingConstraints : 1; 
        unsigned int isHostingUpdateConstraintsPassDuringLayout : 1; 
        unsigned int isRunningEngineLevelConstraintsPass : 1; 
        unsigned int isUpdatingLayoutEngineHostConstraints : 1; 
        unsigned int isExpectingToFlushPendingLayoutChangeNotifications : 1; 
        unsigned int systemLayoutFittingSizeNeedsUpdate : 1; 
        unsigned int systemLayoutFittingSizeNeedsUpdateInWholeSubtree : 1; 
        unsigned int isCalculatingSystemLayoutFittingSize : 1; 
        unsigned int suppressEncapsulationConstraints : 1; 
        unsigned int isFetchingSizeForTAMIC_NOEngineHost : 1; 
        unsigned int stayHiddenAwaitingReuse : 1; 
        unsigned int stayHiddenAfterReuse : 1; 
        unsigned int skippedLayoutWhileHiddenForReuse : 1; 
        unsigned int isPendingHiddenForAnimation : 1; 
        unsigned int hasMaskView : 1; 
        unsigned int hasVisualAltitude : 1; 
        unsigned int hasBackdropMaskViews : 1; 
        unsigned int backdropMaskViewFlags : 5; 
        unsigned int delaysTouchesForSystemGestures : 1; 
        unsigned int subclassShouldDelayTouchForSystemGestures : 1; 
        unsigned int hasMotionEffects : 1; 
        unsigned int backdropOverlayMode : 2; 
        unsigned int tintAdjustmentMode : 2; 
        unsigned int isReferenceView : 1; 
        unsigned int focusState : 2; 
        unsigned int hasUserInterfaceIdiom : 1; 
        unsigned int userInterfaceIdiom : 3; 
        unsigned int ancestorDefinesTintColor : 1; 
        unsigned int ancestorDefinesTintAdjustmentMode : 1; 
        unsigned int needsTraitCollectionDidChangePropagation : 1; 
        unsigned int overridesTraitCollectionDidChange : 1; 
        unsigned int coloredViewBounds : 1; 
        unsigned int coloredAlignmentRects : 1; 
        unsigned int coloredFocusItems : 1; 
        unsigned int preservesSuperviewMargins : 1; 
        unsigned int hasGeometryObservers : 1; 
        unsigned int wantsGeometryChanges : 1; 
        unsigned int hasTraitStorageList : 1; 
        unsigned int cachedTraitCollectionIsValid : 1; 
        unsigned int dontUpdateInferredLayoutMargins : 1; 
        unsigned int implementsViewForBaselineLayout : 1; 
        unsigned int tracksFocusedAncestors : 1; 
        unsigned int hasLayoutArrangements : 1; 
        unsigned int isHiddenManagedByLayoutArrangement : 1; 
        unsigned int hasFocusableContentMargins : 1; 
        unsigned int shouldReverseLayoutDirection : 1; 
        unsigned int cannotBeParentTraitEnvironment : 1; 
        unsigned int didSetViewGenerator : 1; 
        unsigned int viewGeneratorAppearanceState : 2; 
        unsigned int viewGeneratorPendingAppearanceCompletion : 1; 
        unsigned int viewGeneratorReparenting : 1; 
        unsigned int viewGeneratorOriginalAppearanceChanged : 1; 
        unsigned int viewGeneratorAppearanceCompletionCalledWithinRunTransition : 1; 
        unsigned int viewGeneratorNewChange : 1; 
        unsigned int hasTemplateLayoutView : 2; 
        unsigned int ignoresTemplateLayoutView : 2; 
        unsigned int hasMirrorTransform : 1; 
        unsigned int needsContentsFormatUpdate : 1; 
    }  _viewFlags;
    bool  _wantsDeepColorDrawing;
    UIWindow * _window;
}

@property (setter=_setAccessoryViewFrame:, nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } _accessoryViewFrame;
@property (getter=_ancestorDefinesTintAdjustmentMode, setter=_setAncestorDefinesTintAdjustmentMode:, nonatomic) bool _ancestorDefinesTintAdjustmentMode;
@property (getter=_ancestorDefinesTintColor, setter=_setAncestorDefinesTintColor:, nonatomic) bool _ancestorDefinesTintColor;
@property (nonatomic, readonly) UIView *_backdropMaskViewForColorTint;
@property (nonatomic, readonly) UIView *_backdropMaskViewForFilters;
@property (nonatomic, readonly) UIView *_backdropMaskViewForGrayscaleTint;
@property (nonatomic, readonly) NSArray *_backdropMaskViews;
@property (nonatomic, readonly, retain) NSISVariable *_boundsHeightVariable;
@property (nonatomic, readonly, retain) NSISVariable *_boundsWidthVariable;
@property (getter=_canBeParentTraitEnvironment, setter=_setCanBeParentTraitEnvironment:, nonatomic) bool _canBeParentTraitEnviroment;
@property (nonatomic, readonly, retain) NSArray *_constraintsExceptingSubviewAutoresizingConstraints;
@property (setter=_setContinuousCornerRadius:, nonatomic) double _continuousCornerRadius;
@property (setter=_setCornerRadius:, nonatomic) double _cornerRadius;
@property (nonatomic) unsigned long long _countOfFocusedAncestorTrackingViewsInSubtree;
@property (nonatomic) unsigned long long _countOfMotionEffectsInSubtree;
@property (setter=_setDisableLayoutFlushingCount:, nonatomic) long long _disableLayoutFlushingCount;
@property (setter=_setDontUpdateInferredLayoutMargins:, nonatomic) bool _dontUpdateInferredLayoutMargins;
@property (setter=_setHasMirrorTransform:, nonatomic) bool _hasMirrorTransform;
@property (nonatomic, readonly) long long _hiddenManagedByLayoutArrangementCount;
@property (setter=_setIgnoresTemplateLayoutView:, nonatomic) bool _ignoresTemplateLayoutView;
@property (setter=_setInferredLayoutMargins:, nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } _inferredLayoutMargins;
@property (nonatomic, readonly) UIKBRenderConfig *_inheritedRenderConfig;
@property (setter=_setInteractionTintColor:, nonatomic, retain) UIColor *_interactionTintColor;
@property (setter=_setInternalConstraints:, nonatomic, retain) NSMutableArray *_internalConstraints;
@property (nonatomic, readonly) bool _isInLayoutSubviews;
@property (nonatomic, readonly) bool _isUnsatisfiableConstraintsLoggingSuspended;
@property (nonatomic, readonly) long long _keyboardOrientation;
@property (setter=_setLayoutDebuggingIdentifier:, nonatomic, copy) NSString *_layoutDebuggingIdentifier;
@property (setter=_setLayoutEngine:, nonatomic, retain) NSISEngine *_layoutEngine;
@property (nonatomic, readonly) long long _lfld_count;
@property (nonatomic, readonly) NSString *_lfld_currentLayoutMethodName;
@property (nonatomic, readonly) NSMutableArray *_lfld_geometryChangeRecords;
@property (nonatomic, readonly) NSMutableSet *_lfld_setNeedsLayoutCallStacks;
@property (nonatomic, readonly) NSMutableArray *_lfld_variableChangeRecords;
@property (nonatomic, readonly) bool _lightStyleRenderConfig;
@property (setter=_setMaskView:, nonatomic, retain) UIView *_maskView;
@property (setter=_setMayRemainFocused:, nonatomic) bool _mayRemainFocused;
@property (nonatomic, readonly, retain) NSISVariable *_minXVariable;
@property (nonatomic, readonly, retain) NSISVariable *_minYVariable;
@property (setter=_setMultilineContextWidth:, nonatomic) double _multilineContextWidth;
@property (nonatomic, readonly, retain) NSMutableArray *_mutableLayoutArrangements;
@property (nonatomic, readonly, retain) NSMutableArray *_mutableLayoutGuides;
@property (setter=_setNeedsContentsFormatUpdate:, nonatomic) bool _needsContentsFormatUpdate;
@property (nonatomic, readonly) long long _pendingHiddenCount;
@property (setter=_setPreferedContentsFormat:, nonatomic) long long _preferedContentsFormat;
@property (getter=_presentationControllerToNotifyOnLayoutSubviews, setter=_setPresentationControllerToNotifyOnLayoutSubviews:, nonatomic, retain) UIPresentationController *_presentationControllerToNotifyOnLayoutSubviews;
@property (setter=_setRawLayoutMargins:, nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } _rawLayoutMargins;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } _sensitivitySize;
@property (setter=_setShouldArchiveUIAppearanceTags:, nonatomic) bool _shouldArchiveUIAppearanceTags;
@property (nonatomic, readonly) bool _shouldReverseLayoutDirection;
@property (nonatomic, readonly) NSMapTable *_stashedLayoutVariableObservations;
@property (setter=_setTemplateLayoutView:, nonatomic, retain) UIView *_templateLayoutView;
@property (nonatomic, readonly) _UITouchForceObservable *_touchForceObservable;
@property (setter=_setTracksFocusedAncestors:, nonatomic) bool _tracksFocusedAncestors;
@property (getter=_userInterfaceIdiom, setter=_setUserInterfaceIdiom:, nonatomic) long long _userInterfaceIdiom;
@property (nonatomic, readonly) bool _wantsGeometryChangeNotification;
@property (getter=_backgroundColorSystemColorName, setter=_setBackgroundColorSystemColorName:, nonatomic, retain) NSString *backgroundColorSystemColorName;
@property (readonly) NSLayoutYAxisAnchor *bottomAnchor;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } bounds;
@property (nonatomic, readonly) bool canBecomeFocused;
@property (nonatomic) struct CGPoint { double x1; double x2; } center;
@property (readonly) NSLayoutXAxisAnchor *centerXAnchor;
@property (readonly) NSLayoutYAxisAnchor *centerYAnchor;
@property (nonatomic, readonly) UIBezierPath *collisionBoundingPath;
@property (nonatomic, readonly) unsigned long long collisionBoundsType;
@property (getter=_contentSizeNotificationToken, setter=_setContentSizeNotificationToken:, nonatomic, retain) id contentSizeNotificationToken;
@property (getter=_currentScreenScale, nonatomic, readonly) double currentScreenScale;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) bool deliversButtonsForGesturesToSuperview;
@property (nonatomic) bool deliversTouchesForGesturesToSuperview;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) long long effectiveUserInterfaceLayoutDirection;
@property (readonly) NSLayoutYAxisAnchor *firstBaselineAnchor;
@property (getter=isFocused, nonatomic, readonly) bool focused;
@property (getter=_focusedItemRegionContainer, nonatomic, readonly) <_UIFocusRegionContainer> *focusedItemRegionContainer;
@property (nonatomic, readonly) UIView *focusedView;
@property (nonatomic) bool gesturesEnabled;
@property (readonly) unsigned long long hash;
@property (readonly) NSLayoutDimension *heightAnchor;
@property (nonatomic, retain) UIColor *interactionTintColor;
@property (readonly) NSLayoutYAxisAnchor *lastBaselineAnchor;
@property (nonatomic, readonly) CALayer *layer;
@property (setter=_setLayoutMarginsGuide:, nonatomic, retain) UILayoutGuide *layoutMarginsGuide;
@property (readonly) NSLayoutXAxisAnchor *leadingAnchor;
@property (readonly) NSLayoutXAxisAnchor *leftAnchor;
@property (getter=_linearFocusMovementSequences, nonatomic, readonly, copy) NSArray *linearFocusMovementSequences;
@property (getter=_maskView, setter=_setMaskView:, nonatomic, retain) UIView *maskView;
@property (getter=_monitorsSubtree, setter=_setMonitorsSubtree:, nonatomic) bool monitorsSubtree;
@property (getter=_parentFocusEnvironment, nonatomic, readonly) <UIFocusEnvironment> *parentFocusEnvironment;
@property (getter=_parentFocusRegionContainer, nonatomic, readonly) <_UIFocusRegionContainerInternal> *parentFocusRegionContainer;
@property (nonatomic, readonly, copy) NSArray *preferredFocusEnvironments;
@property (getter=_preferredFocusMovementStyle, nonatomic, readonly) long long preferredFocusMovementStyle;
@property (nonatomic, readonly) <UIFocusContainer> *preferredFocusedItem;
@property (nonatomic, readonly) UIView *preferredFocusedView;
@property (nonatomic, retain) UIStoryboardPreviewingSegueTemplateStorage *previewingSegueTemplateStorage;
@property (setter=_setReadableContentGuide:, nonatomic, retain) UILayoutGuide *readableContentGuide;
@property (readonly) NSLayoutXAxisAnchor *rightAnchor;
@property (nonatomic) long long semanticContentAttribute;
@property (nonatomic) bool skipsSubviewEnumeration;
@property (readonly) Class superclass;
@property (nonatomic) long long tag;
@property (readonly) NSLayoutYAxisAnchor *topAnchor;
@property (readonly) NSLayoutXAxisAnchor *trailingAnchor;
@property (nonatomic, readonly) UITraitCollection *traitCollection;
@property (nonatomic) struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; } transform;
@property (getter=isUserInteractionEnabled, nonatomic) bool userInteractionEnabled;
@property (getter=_viewDelegate, setter=_setViewDelegate:, nonatomic) UIViewController *viewDelegate;
@property (nonatomic) bool viewTraversalMark;
@property (nonatomic) bool wantsDeepColorDrawing;
@property (readonly) NSLayoutDimension *widthAnchor;

+ (bool)_addCompletion:(id /* block */)arg1;
+ (void)_addHierarchyTrackingVisitor:(id)arg1;
+ (id /* block */)_alongsideAnimations;
+ (void)_animateUsingDefaultDampedSpringWithDelay:(double)arg1 initialSpringVelocity:(double)arg2 options:(unsigned long long)arg3 animations:(id /* block */)arg4 completion:(id /* block */)arg5;
+ (void)_animateUsingDefaultDampedSpringWithDelay:(double)arg1 initialSpringVelocity:(double)arg2 options:(unsigned long long)arg3 animations:(id /* block */)arg4 start:(id /* block */)arg5 completion:(id /* block */)arg6;
+ (void)_animateUsingDefaultTimingWithOptions:(unsigned long long)arg1 animations:(id /* block */)arg2 completion:(id /* block */)arg3;
+ (void)_animateUsingSpringWithDuration:(double)arg1 delay:(double)arg2 options:(unsigned long long)arg3 mass:(double)arg4 stiffness:(double)arg5 damping:(double)arg6 initialVelocity:(double)arg7 animations:(id /* block */)arg8 completion:(id /* block */)arg9;
+ (void)_animateUsingSpringWithDuration:(double)arg1 delay:(double)arg2 options:(unsigned long long)arg3 mass:(double)arg4 stiffness:(double)arg5 damping:(double)arg6 initialVelocity:(double)arg7 animations:(id /* block */)arg8 start:(id /* block */)arg9 completion:(id /* block */)arg10;
+ (void)_animateWithAttributes:(id)arg1 animations:(id /* block */)arg2 completion:(id /* block */)arg3;
+ (void)_animateWithDuration:(double)arg1 delay:(double)arg2 options:(unsigned long long)arg3 animations:(id /* block */)arg4 start:(id /* block */)arg5 completion:(id /* block */)arg6;
+ (void)_animateWithDuration:(double)arg1 delay:(double)arg2 options:(unsigned long long)arg3 factory:(id)arg4 animations:(id /* block */)arg5 completion:(id /* block */)arg6;
+ (id)_appearanceWhenContainedIn:(id)arg1;
+ (void)_beginDisablingPromoteDescendantToFirstResponder;
+ (void)_beginSuspendingMotionEffectsForReason:(id)arg1;
+ (void)_completeAnimationWithUUID:(id)arg1 duration:(double)arg2 curve:(long long)arg3 reverse:(bool)arg4;
+ (id)_currentAnimationAttributes;
+ (long long)_currentAnimationCurve;
+ (double)_currentAnimationDuration;
+ (id)_currentAnimationSettings;
+ (id)_currentViewAnimationState;
+ (id)_defaultInteractionTintColorForIdiom:(long long)arg1;
+ (id)_defaultUIViewActionForLayer:(id)arg1 forKey:(id)arg2;
+ (id)_defaultUIViewAnimationForLayer:(id)arg1 forKey:(id)arg2;
+ (int)_degreesToRotateFromInterfaceOrientation:(long long)arg1 toInterfaceOrientation:(long long)arg2;
+ (void)_disableAnimationTracking:(id)arg1;
+ (void)_disableAnimationTracking:(id)arg1 clearTrackedAnimations:(bool)arg2;
+ (id)_disabledColorForTintColor:(id)arg1;
+ (double)_durationForRotationFromInterfaceOrientation:(long long)arg1 toInterfaceOrientation:(long long)arg2;
+ (double)_durationForRotationFromInterfaceOrientation:(long long)arg1 toInterfaceOrientation:(long long)arg2 withBaseDuration:(double)arg3;
+ (double)_durationOfSpringAnimationWithMass:(double)arg1 stiffness:(double)arg2 damping:(double)arg3 velocity:(double)arg4;
+ (id)_enableAnimationTracking;
+ (id)_enableAnimationTracking:(bool)arg1;
+ (bool)_enableLegacyRTL;
+ (bool)_enableRTL;
+ (void)_enableToolsDebugAlignmentRects:(bool)arg1;
+ (void)_enableToolsDebugColorViewBounds:(bool)arg1;
+ (void)_endDisablingPromoteDescendantToFirstResponder;
+ (void)_endSuspendingMotionEffectsForReason:(id)arg1;
+ (void)_finalizeStoppedAnimationWithUUID:(id)arg1 reverseAnimation:(bool)arg2;
+ (void)_finalizeStoppedAnimationWithUUID:(id)arg1 reverseAnimation:(bool)arg2 state:(id)arg3 performCompletionsImmediately:(bool)arg4;
+ (void)_finishAnimationTracking;
+ (bool)_hasActiveAnimationContext;
+ (bool)_hostLayoutEngineOnlyTAMIC_YES;
+ (void)_inheritAnimationParameters;
+ (void)_initializeForIdiom:(long long)arg1;
+ (bool)_invalidatesViewUponCreation;
+ (bool)_isAccessingModel;
+ (bool)_isAddingResponderToTree;
+ (bool)_isAnimationTracking;
+ (bool)_isInAnimationBlock;
+ (bool)_isInAnimationBlockWithAnimationsEnabled;
+ (double)_layoutEngineResolution;
+ (bool)_legacyRTLPreferenceEnabled;
+ (id)_motionEffectEngine;
+ (bool)_motionEffectsEnabled;
+ (bool)_motionEffectsSupported;
+ (bool)_overridesTraitCollectionDidChange;
+ (void)_performBlockDelayingTriggeringResponderEvents:(id /* block */)arg1;
+ (void)_performBlockwithAutomaticAppearanceDisabled:(id /* block */)arg1;
+ (void)_performForcedAppearanceModifications:(id /* block */)arg1;
+ (void)_performInitializationForIdiomIfNeccessary:(long long)arg1;
+ (void)_performSystemAppearanceModifications:(id /* block */)arg1;
+ (id)_performWithAnimationTracking:(id /* block */)arg1;
+ (void)_performWithDurationOverride:(double)arg1 animations:(id /* block */)arg2;
+ (void)_performWithState:(id)arg1 trackingIdentifier:(id)arg2 duration:(double)arg3 delay:(double)arg4 animations:(id /* block */)arg5;
+ (void)_performWithoutAnimation:(id /* block */)arg1;
+ (bool)_preventsAppearanceProxyCustomization;
+ (void)_recenterMotionEffects;
+ (void)_registerClassForIdiomInitializationIfNeccessary;
+ (void)_removeHierarchyTrackingVisitor:(id)arg1;
+ (void)_resetHostLayoutEngineOnlyTAMIC_YES;
+ (bool)_retroactivelyRequiresConstraintBasedLayout;
+ (void)_setAlongsideAnimations:(id /* block */)arg1;
+ (void)_setAnimatedPropertiesEnabled:(bool)arg1;
+ (void)_setAnimationAttributes:(id)arg1;
+ (void)_setAnimationAttributes:(id)arg1 skipDelegateAssignment:(bool)arg2;
+ (void)_setAnimationFilter:(int)arg1 forView:(id)arg2;
+ (void)_setAnimationFilterValue:(float)arg1;
+ (void)_setHostLayoutEngineOnlyTAMIC_YES;
+ (void)_setInvalidatesViewUponCreation:(bool)arg1;
+ (void)_setIsResponderAncestorOfFirstResponder:(bool)arg1 startingAtFirstResponder:(id)arg2;
+ (void)_setShouldEnableUIKitParallaxEffects:(bool)arg1;
+ (void)_setTintColorUpdating:(bool)arg1;
+ (void)_setupAnimationWithDuration:(double)arg1 delay:(double)arg2 view:(id)arg3 options:(unsigned long long)arg4 animations:(id /* block */)arg5 start:(id /* block */)arg6 completion:(id /* block */)arg7;
+ (void)_setupAnimationWithDuration:(double)arg1 delay:(double)arg2 view:(id)arg3 options:(unsigned long long)arg4 factory:(id)arg5 animations:(id /* block */)arg6 start:(id /* block */)arg7 animationStateGenerator:(id /* block */)arg8 completion:(id /* block */)arg9;
+ (bool)_shouldEnableUIKitDefaultParallaxEffects;
+ (id)_startAnimationTracking;
+ (void)_stopAnimationWithUUID:(id)arg1;
+ (void)_testIfFirstView:(id)arg1 secondView:(id)arg2 areDescendantsOfView:(id)arg3 results:(bool)arg4;
+ (id)_tintColorForStyle:(int)arg1;
+ (bool)_tintColorUpdating;
+ (bool)_toolsDebugAlignmentRects;
+ (bool)_toolsDebugColorViewBounds;
+ (bool)_toolsDebugShouldDetectClippedViews;
+ (id)_topMostView:(id)arg1 reverse:(bool)arg2;
+ (void)_transitionFromView:(id)arg1 toView:(id)arg2 duration:(double)arg3 options:(unsigned long long)arg4 animations:(id /* block */)arg5 completion:(id /* block */)arg6;
+ (void)_updateModelValuesForAnimationWithUUID:(id)arg1 useInitialValues:(bool)arg2 animatable:(bool)arg3 stateBlock:(id /* block */)arg4 animationBlock:(id /* block */)arg5;
+ (id)_viewWithLayoutConstraints;
+ (bool)_wantsDeepColorByDefault;
+ (void)addKeyframeWithRelativeStartTime:(double)arg1 relativeDuration:(double)arg2 animations:(id /* block */)arg3;
+ (void)animateKeyframesWithDuration:(double)arg1 delay:(double)arg2 options:(unsigned long long)arg3 animations:(id /* block */)arg4 completion:(id /* block */)arg5;
+ (void)animateWithDuration:(double)arg1 animations:(id /* block */)arg2;
+ (void)animateWithDuration:(double)arg1 animations:(id /* block */)arg2 completion:(id /* block */)arg3;
+ (void)animateWithDuration:(double)arg1 delay:(double)arg2 options:(unsigned long long)arg3 animations:(id /* block */)arg4 completion:(id /* block */)arg5;
+ (void)animateWithDuration:(double)arg1 delay:(double)arg2 usingSpringWithDamping:(double)arg3 initialSpringVelocity:(double)arg4 options:(unsigned long long)arg5 animations:(id /* block */)arg6 completion:(id /* block */)arg7;
+ (void)animateWithInteractionProgress:(id)arg1 options:(unsigned long long)arg2 animations:(id /* block */)arg3 completion:(id /* block */)arg4;
+ (id)appearance;
+ (id)appearanceForTraitCollection:(id)arg1;
+ (id)appearanceForTraitCollection:(id)arg1 whenContainedIn:(Class)arg2;
+ (id)appearanceForTraitCollection:(id)arg1 whenContainedInInstancesOfClasses:(id)arg2;
+ (id)appearanceMatchingProperties:(id)arg1 whenContainedInInstancesOfClasses:(id)arg2;
+ (id)appearanceWhenContainedIn:(Class)arg1;
+ (id)appearanceWhenContainedInInstancesOfClasses:(id)arg1;
+ (bool)areAnimationsEnabled;
+ (void)beginAnimations:(id)arg1;
+ (void)beginAnimations:(id)arg1 context:(void*)arg2;
+ (void)commitAnimations;
+ (void)disableAnimation;
+ (void)enableAnimation;
+ (void)endAnimations;
+ (void)flush;
+ (double)inheritedAnimationDuration;
+ (Class)layerClass;
+ (void)mapTrackedAnimations:(id)arg1 withBlock:(id /* block */)arg2;
+ (void)modifyTrackedAnimations:(id)arg1 removeOnCompletion:(bool)arg2 animationFactory:(id /* block */)arg3 block:(id /* block */)arg4;
+ (void)modifyTrackedAnimations:(id)arg1 removeOnCompletion:(bool)arg2 copyAnimation:(bool)arg3 block:(id /* block */)arg4;
+ (void)performRunTransitions:(id /* block */)arg1;
+ (void)performSystemAnimation:(unsigned long long)arg1 onViews:(id)arg2 options:(unsigned long long)arg3 animations:(id /* block */)arg4 completion:(id /* block */)arg5;
+ (void)performWithModelChanges:(id /* block */)arg1;
+ (void)performWithPropertyAccessMode:(long long)arg1 block:(id /* block */)arg2;
+ (void)performWithVisualChanges:(id /* block */)arg1;
+ (void)performWithoutAnimation:(id /* block */)arg1;
+ (bool)requiresConstraintBasedLayout;
+ (void)setAnimationAutoreverses:(bool)arg1;
+ (void)setAnimationBeginsFromCurrentState:(bool)arg1;
+ (void)setAnimationCurve:(long long)arg1;
+ (void)setAnimationDelay:(double)arg1;
+ (void)setAnimationDelegate:(id)arg1;
+ (void)setAnimationDidStopSelector:(SEL)arg1;
+ (void)setAnimationDuration:(double)arg1;
+ (void)setAnimationFrameInterval:(double)arg1;
+ (void)setAnimationFromCurrentState:(bool)arg1;
+ (void)setAnimationPosition:(struct CGPoint { double x1; double x2; })arg1;
+ (void)setAnimationPreventsAdditive:(bool)arg1;
+ (void)setAnimationRepeatAutoreverses:(bool)arg1;
+ (void)setAnimationRepeatCount:(float)arg1;
+ (void)setAnimationRoundsToInteger:(bool)arg1;
+ (void)setAnimationStartDate:(id)arg1;
+ (void)setAnimationStartTime:(double)arg1;
+ (void)setAnimationTransition:(long long)arg1 forView:(id)arg2;
+ (void)setAnimationTransition:(long long)arg1 forView:(id)arg2 cache:(bool)arg3;
+ (void)setAnimationWillStartSelector:(SEL)arg1;
+ (void)setAnimationsEnabled:(bool)arg1;
+ (void)throttledFlush;
+ (void)transitionFromView:(id)arg1 toView:(id)arg2 duration:(double)arg3 options:(unsigned long long)arg4 completion:(id /* block */)arg5;
+ (void)transitionWithView:(id)arg1 duration:(double)arg2 options:(unsigned long long)arg3 animations:(id /* block */)arg4 completion:(id /* block */)arg5;
+ (long long)userInterfaceLayoutDirectionForSemanticContentAttribute:(long long)arg1;
+ (long long)userInterfaceLayoutDirectionForSemanticContentAttribute:(long long)arg1 relativeToLayoutDirection:(long long)arg2;

- (void).cxx_destruct;
- (bool)_UIViewDebuggingIsViewClipping;
- (id)__darkSystemColorForColor:(id)arg1;
- (void)__updateContentsFormatForLayer:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_accessoryViewFrame;
- (void)_accumulateViewConstraintsIntoArray:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_actualFocusRegionFrameInScreen:(id)arg1;
- (void)_addCenterExpressionToExpression:(id)arg1 isVertical:(bool)arg2;
- (void)_addConstraint:(id)arg1;
- (void)_addConstraintPendingAnimatedChanges:(id)arg1;
- (void)_addGeometryChangeObserver:(id)arg1;
- (void)_addLayoutArrangement:(id)arg1;
- (void)_addMotionEffect:(id)arg1;
- (void)_addParentGeometryObservers;
- (void)_addPossibleFocusableElementsToArray:(id)arg1;
- (void)_addPossibleRespondersToArray:(id)arg1;
- (void)_addSubview:(id)arg1 positioned:(long long)arg2 relativeTo:(id)arg3;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_alignmentBounds;
- (id)_alignmentDebuggingOverlayCreateIfNecessary:(bool)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_alignmentFrame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_alignmentRectForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_allLayoutEngines;
- (bool)_allowsArchivingAsSubview;
- (bool)_allowsFocusToLeaveViaHeading:(unsigned long long)arg1;
- (bool)_allowsLinkPreviewInteractionInViewServices;
- (bool)_alwaysHandleInteractionEvents;
- (bool)_alwaysHandleScrollerMouseEvent;
- (bool)_ancestorDefinesTintAdjustmentMode;
- (bool)_ancestorDefinesTintColor;
- (void)_ancestorDidUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (void)_ancestorWillUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (void)_animateToScrollPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)_animateZoomFailureToWindowPoint:(struct CGPoint { double x1; double x2; })arg1 scale:(double)arg2 duration:(float)arg3;
- (bool)_animationIsPaused;
- (id)_anyBackdropMaskView;
- (id)_appearanceContainer;
- (Class)_appearanceGuideClass;
- (bool)_appearanceIsInvalid;
- (id)_appearanceTraitCollection;
- (bool)_appliesExclusiveTouchToSubviewTree;
- (void)_applyAppearanceInvocations;
- (void)_applyAutoresizingMaskWithOldSuperviewSize:(struct CGSize { double x1; double x2; })arg1;
- (void)_applyISEngineLayoutValuesToBoundsOnly:(bool)arg1;
- (bool)_applyKeyPathsAndRelativeValues:(id)arg1 forMotionEffect:(id)arg2;
- (void)_applyScreenScaleToContentScaleFactorIfNotSpecifiedByDeveloperTargetScreen:(id)arg1;
- (bool)_areAccessibilityButtonShapesEnabled;
- (bool)_associatedViewControllerForwardsAppearanceCallbacks:(id)arg1 performHierarchyCheck:(bool)arg2 isRoot:(bool)arg3;
- (double)_autolayoutSpacingAtEdge:(int)arg1 inContainer:(id)arg2;
- (double)_autolayoutSpacingAtEdge:(int)arg1 nextToNeighbor:(id)arg2;
- (id)_autolayoutTrace;
- (id)_autoresizingConstraints;
- (bool)_autoresizingConstraintsAreUpdated;
- (void)_autoresizingConstraints_frameDidChange;
- (id)_autoresizingDescription;
- (long long)_backdropMaskViewFlags;
- (id)_backdropMaskViewForColorBurnTint;
- (id)_backdropMaskViewForColorTint;
- (id)_backdropMaskViewForDarkeningTint;
- (id)_backdropMaskViewForFilters;
- (id)_backdropMaskViewForFlag:(long long)arg1;
- (id)_backdropMaskViewForGrayscaleTint;
- (id)_backdropMaskViews;
- (struct CGColor { }*)_backgroundCGColor;
- (id)_backgroundColor;
- (id)_backgroundColorSystemColorName;
- (double)_baselineOffsetFromBottom;
- (double)_baselineOffsetFromNearestEdgeForLayoutAttribute:(long long)arg1;
- (id)_baselineViewForConstraint:(id)arg1 forFirstItem:(bool)arg2 withOffset:(double*)arg3;
- (id)_basicAnimationWithKeyPath:(id)arg1;
- (bool)_becomeFirstResponderWhenPossible;
- (void)_beginOcclusion:(id)arg1;
- (void)_beginSuspendingMotionEffects;
- (bool)_bitFlagValueAfterIncrementingHiddenManagementCountForKey:(const char *)arg1 withIncrement:(long long)arg2 bitFlagValue:(bool)arg3;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_boundsForAlignmentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_boundsHeightVariable;
- (id)_boundsWidthVariable;
- (bool)_cachedTraitCollectionIsValid;
- (double)_calculatedIntrinsicHeight;
- (struct CGSize { double x1; double x2; })_calculatedSystemLayoutSizeFittingSize:(struct CGSize { double x1; double x2; })arg1 withHorizontalFittingPriority:(float)arg2 verticalFittingPriority:(float)arg3 hasIntentionallyCollapsedHeight:(bool*)arg4;
- (bool)_canBeParentTraitEnvironment;
- (bool)_canBeReusedInPickerView;
- (bool)_canBecomeFirstResponderWhenPossible;
- (bool)_canBecomeLayoutEngineDelegate;
- (bool)_canDrawContent;
- (bool)_canHandleStatusBarTouchAtLocation:(struct CGPoint { double x1; double x2; })arg1;
- (bool)_canSkipTraitsAndOverlayUpdatesForViewControllerToNotifyOnLayoutResetState:(bool)arg1;
- (bool)_canStartRotationFromEvent:(struct __GSEvent { }*)arg1;
- (bool)_canStartZoomFromEvent:(struct __GSEvent { }*)arg1;
- (id)_centerExpressionInContainer:(id)arg1 vertical:(bool)arg2 contentInsetScale:(double)arg3;
- (id)_childFocusRegions;
- (id)_childFocusRegionsInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_cleanUpLayoutArrangements;
- (void)_clearAnimationFilters;
- (void)_clearBecomeFirstResponderWhenCapable;
- (void)_clearBecomeFirstResponderWhenCapableOnSubtree;
- (void)_clearConstraintsBrokenWhileUnsatisfiableConstraintsLoggingSuspended;
- (void)_clearLayoutVariableObservationsOnlyToSupportTAMICChange:(bool)arg1;
- (int)_clipCorners;
- (int)_clipCornersOfView:(id)arg1;
- (id)_clippedViewHierarchyDescription;
- (bool)_clippingDetected;
- (void)_collectKeyViews:(id)arg1;
- (id)_colorViewBoundsOverlayCreateIfNecessary:(bool)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_compatibleBounds;
- (void)_configureAutolayoutFlagsNeedingLayout:(bool)arg1;
- (void)_constantsForHorizontalAutoresizingConstraints:(double*)arg1 :(double*)arg2;
- (void)_constantsForVerticalAutoresizingConstraints:(double*)arg1 :(double*)arg2;
- (void)_constrainViewToSuperview;
- (struct CGPoint { double x1; double x2; })_constrainedScrollPoint:(struct CGPoint { double x1; double x2; })arg1 contentSize:(struct CGSize { double x1; double x2; })arg2;
- (id)_constraintForIdentifier:(id)arg1;
- (id)_constraintsArray;
- (id)_constraintsBrokenWhileUnsatisfiableConstraintsLoggingSuspended;
- (id)_constraintsBrokenWhileUnsatisfiableConstraintsLoggingSuspendedCreateIfNecessary:(bool)arg1;
- (id)_constraintsEquivalentToAutoresizingMask;
- (id)_constraintsExceptingSubviewAutoresizingConstraints;
- (id)_constraintsValidityDescription;
- (void)_constraints_didChangeAutoresizingConstraintsArrayForContainedView:(id)arg1;
- (void)_constraints_frameDidChange;
- (void)_constraints_subviewDidChangeSuperview:(id)arg1;
- (void)_constraints_subviewWillChangeSuperview:(id)arg1;
- (void)_constraints_viewGeometryDidChange;
- (void)_constraints_willChangeAutoresizingConstraintsArrayForContainedView:(id)arg1;
- (bool)_containedInAbsoluteResponderChain;
- (id)_containerForContentSizeConstraints;
- (int)_containerStyle;
- (id)_containingScrollView;
- (bool)_containsPreferredFocusableView;
- (struct CGSize { double x1; double x2; })_contentCompressionResistancePriorities;
- (id)_contentHeightVariable;
- (bool)_contentHuggingDefault_isUsuallyFixedHeight;
- (bool)_contentHuggingDefault_isUsuallyFixedWidth;
- (struct CGSize { double x1; double x2; })_contentHuggingPriorities;
- (double)_contentMargin;
- (id)_contentSizeConstraints;
- (id)_contentSizeNotificationToken;
- (id)_contentWidthVariable;
- (long long)_contentsFormatForNonDeepDrawing;
- (double)_continuousCornerRadius;
- (bool)_controlsOwnScaleFactor;
- (struct CGPoint { double x1; double x2; })_convertOffset:(struct CGPoint { double x1; double x2; })arg1 fromView:(id)arg2;
- (struct CGPoint { double x1; double x2; })_convertOffset:(struct CGPoint { double x1; double x2; })arg1 toView:(id)arg2;
- (void)_convertToAutolayoutSizingIfNecessary;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_convertViewPointToSceneSpaceForKeyboard:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (double)_convertVisualAltitude:(double)arg1 fromView:(id)arg2;
- (double)_convertVisualAltitude:(double)arg1 toView:(id)arg2;
- (double)_cornerRadius;
- (unsigned long long)_countOfFocusedAncestorTrackingViewsInSubtree;
- (unsigned long long)_countOfMotionEffectsInSubtree;
- (void*)_createIOSurfaceWithPadding:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (id)_createIfNeededAnchorForAssocObjectKey:(char *)arg1 class:(Class)arg2 withAttribute:(long long)arg3;
- (void*)_createImageFromRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 padding:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg2;
- (void)_createJostledViewsIfNecessary;
- (void)_createLayerWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_currentContentSizeHeightConstraint;
- (id)_currentFocusAnimationCoordinator;
- (double)_currentScreenScale;
- (long long)_currentUserInterfaceIdiom;
- (id)_debuggableDescriptionForConstraintsAffectingAxis:(long long)arg1;
- (id)_debuggableDescriptionForConstraintsAffectingHorizontalAxis;
- (id)_debuggableDescriptionForConstraintsAffectingVerticalAxis;
- (void)_decrementHiddenManagedByLayoutArrangementCount;
- (void)_decrementPendingHiddenCount;
- (void)_decrementUnsatisfiableConstraintsLoggingSuspensionCount;
- (struct CGSize { double x1; double x2; })_defaultContentCompressionResistancePriorities;
- (struct CGSize { double x1; double x2; })_defaultContentHuggingPriorities;
- (id)_defaultLayoutDescription;
- (long long)_defaultTintAdjustmentMode;
- (bool)_delaysTouchesForSystemGestures;
- (long long)_depthFirstCompare:(id)arg1;
- (id)_descendantWithAmbiguousLayout;
- (void)_descendent:(id)arg1 didMoveFromSuperview:(id)arg2 toSuperview:(id)arg3;
- (void)_descendent:(id)arg1 willMoveFromSuperview:(id)arg2 toSuperview:(id)arg3;
- (id)_descriptionForLayoutTrace;
- (void)_detectAndHandleClippedView;
- (void)_didAddDependentConstraint:(id)arg1;
- (void)_didChangeFromIdiom:(long long)arg1 onScreen:(id)arg2 traverseHierarchy:(bool)arg3;
- (void)_didChangeFromIdiomOnScreen:(id)arg1 traverseHierarchy:(bool)arg2;
- (void)_didChangeKeyplaneWithContext:(id)arg1;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (void)_didRemoveDependentConstraint:(id)arg1;
- (void)_didRemoveSubview:(id)arg1;
- (void)_didScroll;
- (void)_didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (id)_dimensionExpressionInContainer:(id)arg1 vertical:(bool)arg2 useContentVariables:(bool)arg3;
- (bool)_disableGeometryObserverNotification;
- (void)_disableLayoutFlushing;
- (long long)_disableLayoutFlushingCount;
- (id)_disabledColor;
- (void)_discardLayoutEngine:(id)arg1;
- (void)_dispatchMotionEffectsVisitorWithDelta:(long long)arg1;
- (void)_dispatchTintColorVisitorWithReasons:(unsigned long long)arg1;
- (void)_dispatchTrackingFocusVisitorWithDelta:(long long)arg1;
- (bool)_dontUpdateInferredLayoutMargins;
- (bool)_drawViewHierarchyInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)_drawsAsBackdropOverlay;
- (id)_dummyFittingSizeInfo;
- (void)_dumpClippedViewWithScreenshotIfNecessary;
- (id)_edgeExpressionInContainer:(id)arg1 vertical:(bool)arg2 max:(bool)arg3 contentInsetScale:(double)arg4;
- (unsigned long long)_effectiveAutoresizingMask;
- (void)_effectiveAutoresizingMask_autoresizesSubviewsChanged;
- (void)_enableLayerKitPatternDrawing:(bool)arg1;
- (void)_enableLayoutFlushing;
- (id)_enclosingInterfaceActionGroupView;
- (id)_enclosingInterfaceActionRepresentationView;
- (id)_enclosingScrollableScrollerIncludingSelf;
- (id)_enclosingScrollerIncludingSelf;
- (id)_encodableSubviews;
- (void)_encodeBackgroundColorWithCoder:(id)arg1;
- (void)_encodeFrameWithCoder:(id)arg1;
- (void)_endOcclusion:(id)arg1;
- (void)_endSuspendingMotionEffects;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_engineFrameAtScreenScaleForItem:(id)arg1 inEngine:(id)arg2;
- (void)_engineHostConstraints_frameDidChange;
- (id)_engineHostingWidthConstraint;
- (void)_enumerateDescendentViews:(id /* block */)arg1;
- (void)_evaluateContentsFormat;
- (bool)_fakeShouldAnimatePropertyWithKey:(id)arg1;
- (id)_findFirstSubviewWantingToBecomeFirstResponder;
- (void)_finishTemporaryInternalConstraints:(id)arg1 withEngine:(id)arg2;
- (double)_firstBaselineOffsetFromTop;
- (id)_firstCommonAncestorToView:(id)arg1;
- (id)_firstResponder;
- (void)_flushConstraintsPendingAnimatedChanges;
- (id)_focusDebugOverlayParentView;
- (bool)_focusRegionCanBecomeFocused;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_focusRegionContainerFrameInScreen:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_focusRegionFrame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_focusRegionFrameInScreen:(id)arg1;
- (id)_focusRegionGuides;
- (bool)_focusRegionIsEligibleForFocus;
- (id)_focusRegionItem;
- (id)_focusRegionView;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_focusableContentMargins;
- (void)_focusedAncestorDidChange:(id)arg1;
- (void)_focusedAncestorWillChange:(id)arg1;
- (id)_focusedItemRegionContainer;
- (long long)_focusedSound;
- (void)_focusedViewDidChange:(id)arg1;
- (void)_focusedViewWillChange:(id)arg1;
- (bool)_forceLayoutEngineSolutionInRationalEdges;
- (bool)_forwardsSystemLayoutFittingSizeToContentView:(id)arg1;
- (id)_fulfillPromisedFocusRegion;
- (id)_generateBackdropMaskImage;
- (id)_generateBackdropMaskViewForFlag:(long long)arg1;
- (id)_generateContentSizeConstraints;
- (void)_geometryChanges:(id)arg1 forAncestor:(id)arg2;
- (void)_gestureChanged:(int)arg1 event:(struct __GSEvent { }*)arg2;
- (void)_gestureEnded:(struct __GSEvent { }*)arg1;
- (id)_gestureInfo;
- (id)_gestureRecognizers;
- (void)_handleDoubleUpdateConstraintsIfNecessary;
- (void)_handleLayoutArrangementConstraintsIfNecessary;
- (void)_handleLayoutEngineHostingConstraintsIfNecessary;
- (void)_handleSizeConstraintsAsAppropriate;
- (bool)_hasAutolayoutHeightConstraint;
- (bool)_hasCustomAutolayoutNeighborSpacing;
- (bool)_hasFocusableContents;
- (bool)_hasLayoutArrangements;
- (bool)_hasLayoutEngine;
- (bool)_hasMirrorTransform;
- (bool)_hasNormalTintAdjustmentMode;
- (bool)_hasOpaqueBackground;
- (bool)_hasTransparentBackground;
- (long long)_hiddenManagedByLayoutArrangementCount;
- (long long)_hiddenManagementCountForKey:(const char *)arg1 bitFlagValue:(bool)arg2;
- (id)_hierarchyRepresentation;
- (id)_hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2 windowServerHitTestWindow:(id)arg3;
- (bool)_hostsLayoutEngine;
- (bool)_hostsLayoutEngineAllowsTAMIC_NO;
- (id)_idleModeLayoutAttributes;
- (bool)_ignoresTemplateLayoutView;
- (double)_imageButtonMargin;
- (id)_imageFromRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)_imageSnapshotCapturedAllContent;
- (void)_incrementHiddenManagedByLayoutArrangementCount;
- (void)_incrementPendingHiddenCount;
- (void)_incrementUnsatisfiableConstraintsLoggingSuspensionCount;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_inferredLayoutMargins;
- (void)_informContainerThatSubviewsNeedUpdateConstraints;
- (void)_informContainerThatSubviewsNeedUpdateConstraintsNeedingLayout:(bool)arg1;
- (void)_informSuperviewChainThatDescendantNeedsDoubleUpdateConstraintsPass;
- (void)_informSuperviewChainThatStrictDescendantNeedsDoubleUpdateConstraintsIsInvalidIncludingSelf:(bool)arg1;
- (id)_inheritedInteractionTintColor;
- (id)_inheritedRenderConfig;
- (id)_initWithLayer:(id)arg1;
- (id)_initWithMaskImage:(id)arg1;
- (void)_initializeHostedLayoutEngine;
- (void)_initializeLayoutEngine;
- (id)_interactionTintColor;
- (id)_interceptEvent:(id)arg1;
- (id)_interceptMouseEvent:(struct __GSEvent { }*)arg1;
- (id)_internalConstraints;
- (float)_internalScaleForScale:(float)arg1;
- (bool)_intrinsicContentSizeConstraintsAreClean;
- (void)_intrinsicContentSizeInvalidatedForChildView:(id)arg1;
- (struct CGSize { double x1; double x2; })_intrinsicSizeWithinSize:(struct CGSize { double x1; double x2; })arg1;
- (void)_invalidateAppearance;
- (void)_invalidateAppearanceForSubviewsOfClass:(Class)arg1;
- (void)_invalidateAppearanceForTraitCollection:(id)arg1;
- (void)_invalidateAutoresizingConstraints;
- (void)_invalidateEngineHostConstraints;
- (void)_invalidateIntrinsicContentSizeNeedingLayout:(bool)arg1;
- (void)_invalidateLayerContents;
- (void)_invalidateLayoutEngineHostConstraints;
- (void)_invalidateSubviewCache;
- (void)_invalidateSystemLayoutSizeFittingSizeAtEngineDelegateLevel;
- (bool)_isAlphaHittableAndHasAlphaHittableAncestors;
- (bool)_isAncestorOfFirstResponder;
- (bool)_isChargeEnabled;
- (bool)_isDeallocating;
- (bool)_isEligibleForFocus;
- (bool)_isFloatingLayoutItem;
- (bool)_isFocusDirectionFlippedHorizontally;
- (bool)_isFocusableElement;
- (bool)_isFocusedOrAncestorOfFocusedView;
- (bool)_isHiddenForReuse;
- (bool)_isInAWindow;
- (bool)_isInAnimatedLayout;
- (bool)_isInExclusiveTouchSubviewTree;
- (bool)_isInHierarchyAllowingMotionEffects;
- (bool)_isInLayoutSubviews;
- (bool)_isInTransitionBlock;
- (bool)_isInVisibleHierarchy;
- (bool)_isInteractiveElement;
- (bool)_isLayoutEngineSuspended;
- (bool)_isMemberOfViewControllerHierarchy:(id)arg1;
- (bool)_isPromiseFocusRegion;
- (bool)_isRootForKeyResponderCycle;
- (bool)_isRubberBanding;
- (bool)_isScrollingEnabled;
- (bool)_isTransparentFocusRegion;
- (bool)_isUnsatisfiableConstraintsLoggingSuspended;
- (bool)_isViewHierarchyPreparedForConstraint:(id)arg1;
- (void)_is_layout;
- (bool)_is_needsLayout;
- (void)_is_setNeedsLayout;
- (long long)_keyboardOrientation;
- (bool)_la_isVisible;
- (id)_layer;
- (Class)_layerClass;
- (id)_layoutDebuggingIdentifier;
- (id)_layoutDebuggingTitle;
- (id)_layoutDescriptionIfDifferentFromDefault;
- (id)_layoutEngine;
- (id)_layoutEngineCreateIfNecessary;
- (id)_layoutEngineHostConstraints;
- (id)_layoutEngineIfAvailable;
- (bool)_layoutEngine_didAddLayoutConstraint:(id)arg1 roundingAdjustment:(double)arg2 mutuallyExclusiveConstraints:(id*)arg3;
- (void)_layoutEngine_willRemoveLayoutConstraint:(id)arg1;
- (void)_layoutEngine_windowDidChange;
- (unsigned long long)_layoutHash;
- (id)_layoutHashesStackCreateIfNeeded:(bool)arg1;
- (void)_layoutMarginsDidChangeFromOldMargins:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (id)_layoutVariablesWithAmbiguousValue;
- (id)_legendEntryForDescriptionForLayout;
- (void)_lfld_addGeometryChangeRecordWithPropertyName:(id)arg1 value:(id)arg2;
- (void)_lfld_addSetNeedsLayoutCallStack:(id)arg1;
- (void)_lfld_addVariableChangeRecordForVariable:(id)arg1 inLayoutEngine:(id)arg2;
- (long long)_lfld_count;
- (id)_lfld_currentLayoutMethodName;
- (id)_lfld_description;
- (void)_lfld_discardLastCurrentLayoutMethodName;
- (id)_lfld_geometryChangeRecords;
- (void)_lfld_incrementCount;
- (id)_lfld_minimalDescription;
- (void)_lfld_prepareToResetCountIfNecessary;
- (void)_lfld_pushCurrentLayoutMethodName:(id)arg1;
- (void)_lfld_resetCount;
- (id)_lfld_setNeedsLayoutCallStacks;
- (id)_lfld_variableChangeRecords;
- (bool)_lightStyleRenderConfig;
- (id)_lowerExpressionOneLevelWithCurrentXExpression:(id)arg1 YExpression:(id)arg2 vertical:(bool)arg3 container:(id)arg4;
- (void)_makeSubtreePerformSelector:(SEL)arg1 withObject:(id)arg2;
- (void)_makeSubtreePerformSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3 copySublayers:(bool)arg4;
- (void)_makeTemporaryInternalConstraintsWithEngine:(id)arg1 ignoreAutoresizingMaskConstraints:(bool)arg2 returningConstraintsForViewsNeedingSecondPass:(id*)arg3 currentTargetWidth:(double)arg4;
- (void)_markClippingDetected;
- (id)_maskView;
- (bool)_mayRemainFocused;
- (void)_mergeConstraintsBrokenWhileUnsatisfiableConstraintsLoggingSuspendedToAncestor:(id)arg1;
- (id)_minXVariable;
- (id)_minYVariable;
- (float)_minimumZoomScaleDelta;
- (bool)_monitorsSubtree;
- (id)_motionEffects;
- (bool)_motionEffectsAreSuspended;
- (void)_movedToFront;
- (double)_multilineContextWidth;
- (id)_mutableLayoutArrangements;
- (id)_mutableLayoutArrangementsCreateIfNecessary;
- (id)_mutableLayoutGuides;
- (id)_mutableLayoutGuidesCreateIfNecessary;
- (bool)_needsContentsFormatUpdate;
- (bool)_needsDoubleUpdateConstraintsPass;
- (void)_needsDoubleUpdateConstraintsPassMayHaveChangedFrom:(bool)arg1;
- (bool)_needsLayoutOnAnimatedBoundsChangeForNewBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)_needsLayoutOnAnimatedFrameChangeForNewFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_nextKeyResponder;
- (id)_normalInheritedTintColor;
- (void)_noteTraitsDidChangeRecursively;
- (void)_notifyArrangementsOfChangeInItem:(id)arg1 withSelector:(SEL)arg2;
- (void)_notifyGeometryObserversWithChangeInfo:(id)arg1;
- (void)_notifyReferenceViewSizeChange;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_nsis_bounds;
- (void)_nsis_center:(struct CGPoint { double x1; double x2; }*)arg1 bounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg2 inEngine:(id)arg3;
- (void)_nsis_center:(struct CGPoint { double x1; double x2; }*)arg1 bounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg2 inEngine:(id)arg3 forLayoutGuide:(id)arg4;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_nsis_compatibleBoundsInEngine:(id)arg1;
- (struct CGSize { double x1; double x2; })_nsis_contentSize;
- (struct CGPoint { double x1; double x2; })_nsis_origin;
- (void)_nsis_origin:(struct CGPoint { double x1; double x2; }*)arg1 bounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg2 inEngine:(id)arg3;
- (unsigned long long)_numberOfColumns:(bool)arg1;
- (void)_oldEngineHostConstraints_frameDidChange;
- (void)_oldUpdateLayoutEngineHostConstraints;
- (bool)_old_nsli_lowerAttribute:(int)arg1 intoExpression:(id)arg2 withCoefficient:(double)arg3 forConstraint:(id)arg4;
- (bool)_overridesTraitCollectionDidChange;
- (id)_parallaxMotionEffect;
- (id)_parentFocusEnvironment;
- (id)_parentFocusRegionContainer;
- (void)_parentalLayoutEngineDidChangeTo:(id)arg1;
- (long long)_pendingHiddenCount;
- (void)_performUpdatesForPossibleChangesOfIdiom:(long long)arg1 orScreen:(id)arg2 traverseHierarchy:(bool)arg3;
- (void)_popDisableLayoutFlushing;
- (void)_populateArchivedSubviews:(id)arg1;
- (void)_populateEngineWithConstraintsForViewSubtree:(id)arg1 forComputingFittingSizeOfView:(id)arg2;
- (void)_postMovedFromSuperview:(id)arg1;
- (bool)_potentiallyHasDanglyConstraints;
- (bool)_preWhitetailUsesAutoresizingConstraints;
- (long long)_preferedContentsFormat;
- (id)_preferredConfigurationForFocusAnimation:(long long)arg1 inContext:(id)arg2;
- (double)_preferredDurationForFocusAnimation:(long long)arg1 inContext:(id)arg2;
- (double)_preferredDurationScaleFactorForFocusAnimation:(long long)arg1 inContext:(id)arg2;
- (struct CGSize { double x1; double x2; })_preferredLayoutEngineToUserScalingCoefficients;
- (double)_preferredMaxLayoutWidth;
- (void)_prepareForFirstIntrinsicContentSizeCalculation;
- (void)_prepareForSecondIntrinsicContentSizeCalculationWithLayoutEngineBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_prepareToAppearInNavigationItem:(id)arg1 onLeft:(bool)arg2;
- (id)_presentationControllerToNotifyOnLayoutSubviews;
- (id)_previewingSegueTemplateStorageForLocation:(struct CGPoint { double x1; double x2; })arg1 inView:(id)arg2;
- (id)_previousFittingSizeInfo;
- (id)_previousKeyResponder;
- (id)_primitiveContentCompressionResistancePrioritiesValue;
- (id)_primitiveContentHuggingPrioritiesValue;
- (long long)_primitiveTintAdjustmentMode;
- (Class)_printFormatterClass;
- (void)_processDidChangeRecursivelyFromOldTraits:(id)arg1 toCurrentTraits:(id)arg2 forceNotification:(bool)arg3;
- (void)_promoteSelfOrDescendantToFirstResponderIfNecessary;
- (double)_proportionalFillLengthForOrderedArrangement:(id)arg1 relevantParentAxis:(long long)arg2;
- (void)_pushDisableLayoutFlushing;
- (void)_pushLayoutHash;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_rawLayoutMargins;
- (void)_rebuildLayoutFromScratch;
- (void)_recalculateStrictDescendantNeedsDoubleUpdateConstraints;
- (void)_receiveVisitor:(id)arg1;
- (bool)_recordBaselineLoweringInfo;
- (void)_recordConstraintBrokenWhileUnsatisfiableConstraintsLoggingSuspended:(id)arg1;
- (id)_recursiveAutolayoutTraceAtLevel:(long long)arg1;
- (void)_recursiveCollectTemporaryInternalConstraintsWithEngine:(id)arg1 ignoreAutoresizingMaskConstraints:(bool)arg2 returningConstraintsForViewsNeedingSecondPass:(id*)arg3 currentTargetWidth:(double)arg4;
- (id)_recursiveConstraintsTraceAtLevel:(long long)arg1;
- (void)_recursiveInvalidateDescendantsNeedingDoubleUpdateConstraints;
- (id)_recursiveLayoutEngineDescription;
- (void)_recursiveUpdateConstraintsIfNeededCollectingViews:(id)arg1 forSecondPass:(bool)arg2;
- (void)_recursivelyConsiderResumingMotionEffects;
- (void)_recursivelyNameLayerTree;
- (void)_recursivelyReconsiderMotionEffectSuspension;
- (void)_recursivelySetHiddenForBackdropMaskViews:(bool)arg1;
- (void)_recursivelySuspendMotionEffects;
- (void)_reestablishConstraintsForTransformChange;
- (id)_referenceView;
- (id)_regionForFocusedItem:(id)arg1 inScreen:(id)arg2;
- (void)_registerAsReferenceView;
- (void)_registerForGeometryChanges;
- (void)_relaxLayoutEngineHostConstraints;
- (void)_relaxLayoutEngineHostConstraintsForAxis:(long long)arg1;
- (void)_removeAlignmentDebuggingOverlays;
- (void)_removeAllAnimations:(bool)arg1;
- (void)_removeAutolayoutSizingConstraints;
- (void)_removeBackdropMaskViews;
- (void)_removeColorViewBoundsOverlays;
- (void)_removeConstraint:(id)arg1;
- (void)_removeFirstResponderFromSubtree;
- (void)_removeGeometryChangeObserver:(id)arg1;
- (void)_removeLayoutArrangement:(id)arg1;
- (void)_removeMotionEffect:(id)arg1;
- (void)_removeParentGeometryObservers;
- (void)_renderLayerContentsWithRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 inContext:(struct CGContext { }*)arg2;
- (void)_renderLayerWithRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 inContext:(struct CGContext { }*)arg2;
- (void)_renderSnapshotWithRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 inContext:(struct CGContext { }*)arg2;
- (void)_replaceLayer:(id)arg1;
- (id)_representationOfHierarchyForXcode;
- (bool)_requiresIntersectionWithFocusMapSearchArea;
- (void)_resetClippingDetected;
- (void)_resetContentRect;
- (void)_resetContentStretch;
- (void)_resetLayoutEngineHostConstraints;
- (void)_resetLayoutEngineHostConstraintsForAxis:(long long)arg1;
- (void)_resetToBeginningOfDoublePass;
- (void)_resetZoomingWithEvent:(struct __GSEvent { }*)arg1;
- (void)_resizeWithOldSuperviewSize:(struct CGSize { double x1; double x2; })arg1;
- (void)_resizeWithOldSuperviewSize_ancient:(struct CGSize { double x1; double x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_responderExternalTouchRectForWindow:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_responderSelectionRectForWindow:(id)arg1;
- (void)_resumeLayoutEngine;
- (id)_rootForKeyResponderCycle;
- (id)_rootInputWindowController;
- (id)_rootView;
- (void)_rotateFromEvent:(struct __GSEvent { }*)arg1;
- (void)_rotateToDegrees:(float)arg1 duration:(float)arg2 event:(struct __GSEvent { }*)arg3;
- (float)_rubberBandScaleForScale:(float)arg1;
- (void)_rubberbandZoomToEvent:(struct __GSEvent { }*)arg1 scale:(float)arg2;
- (float)_scaleForInternalScale:(float)arg1;
- (id)_screen;
- (id)_scriptingInfo;
- (struct CGPoint { double x1; double x2; })_scrollPointForPoint:(struct CGPoint { double x1; double x2; })arg1 scale:(float)arg2 constrain:(bool)arg3 snapToEdge:(bool)arg4;
- (id)_scrollViewWantingUpdateInConstraint:(id)arg1;
- (id)_scroller;
- (struct CGSize { double x1; double x2; })_scrollerContentSize;
- (void)_searchForFocusRegionsInContext:(id)arg1;
- (void)_sendUpdateConstraintsIfNecessaryForSecondPass:(bool)arg1;
- (struct CGSize { double x1; double x2; })_sensitivitySize;
- (void)_setAccessoryViewFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_setAncestorDefinesTintAdjustmentMode:(bool)arg1;
- (void)_setAncestorDefinesTintColor:(bool)arg1;
- (void)_setAppearanceIsInvalid:(bool)arg1;
- (void)_setAutoresizingConstraints:(id)arg1;
- (void)_setBackdropMaskView:(id)arg1 forFlag:(long long)arg2;
- (void)_setBackdropMaskViewFlags:(long long)arg1;
- (void)_setBackdropMaskViewForColorBurnTint:(id)arg1;
- (void)_setBackdropMaskViewForColorTint:(id)arg1;
- (void)_setBackdropMaskViewForDarkeningTint:(id)arg1;
- (void)_setBackdropMaskViewForFilters:(id)arg1;
- (void)_setBackdropMaskViewForGrayscaleTint:(id)arg1;
- (void)_setBackgroundCGColor:(struct CGColor { }*)arg1;
- (void)_setBackgroundCGColor:(struct CGColor { }*)arg1 withSystemColorName:(id)arg2;
- (void)_setBackgroundColor:(id)arg1;
- (void)_setBackgroundColorSystemColorName:(id)arg1;
- (void)_setBaselineView:(id)arg1 offset:(double)arg2 forConstraint:(id)arg3 forFirstItem:(bool)arg4;
- (void)_setBoundsForBackdropMaskViews:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_setCanBeParentTraitEnvironment:(bool)arg1;
- (void)_setCenterForBackdropMaskViews:(struct CGPoint { double x1; double x2; })arg1;
- (void)_setCenterForBackdropMaskViews:(struct CGPoint { double x1; double x2; })arg1 convertPoint:(bool)arg2;
- (void)_setChargeEnabled:(bool)arg1;
- (void)_setContentCompressionResistancePriorities:(struct CGSize { double x1; double x2; })arg1;
- (void)_setContentHuggingPriorities:(struct CGSize { double x1; double x2; })arg1;
- (void)_setContentImage:(id)arg1;
- (void)_setContentRectInPixels:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 forContentSize:(struct CGSize { double x1; double x2; })arg2;
- (void)_setContentSizeConstraints:(id)arg1;
- (void)_setContentSizeNotificationToken:(id)arg1;
- (void)_setContentStretchInPixels:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 forContentSize:(struct CGSize { double x1; double x2; })arg2 shouldTile:(bool)arg3;
- (void)_setContentsTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1;
- (void)_setContinuousCornerRadius:(double)arg1;
- (void)_setCornerRadius:(double)arg1;
- (void)_setDelaysTouchesForSystemGestures:(bool)arg1;
- (void)_setDisableLayoutFlushingCount:(long long)arg1;
- (void)_setDontUpdateInferredLayoutMargins:(bool)arg1;
- (void)_setDrawsAsBackdropOverlay:(bool)arg1;
- (void)_setDrawsAsBackdropOverlayWithBlendMode:(long long)arg1;
- (void)_setFirstResponder:(id)arg1;
- (void)_setFocusableContentMargins:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)_setFrameForBackdropMaskViews:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_setFrameForBackdropMaskViews:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 convertFrame:(bool)arg2;
- (void)_setGestureInfoZoomScale:(float)arg1;
- (void)_setHasMirrorTransform:(bool)arg1;
- (void)_setHiddenForBackdropMaskViews:(bool)arg1;
- (void)_setHiddenForReuse:(bool)arg1;
- (void)_setHostsLayoutEngine:(bool)arg1;
- (void)_setIdleModeLayoutAttributes:(id)arg1;
- (void)_setIgnoresTemplateLayoutView:(bool)arg1;
- (void)_setInAnimatedLayout:(bool)arg1;
- (void)_setInSecondConstraintsPass:(bool)arg1;
- (void)_setInferredLayoutMargins:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)_setInteractionTintColor:(id)arg1;
- (void)_setInterceptMouseEvent:(bool)arg1;
- (void)_setInternalConstraints:(id)arg1;
- (void)_setIsAncestorOfFirstResponder:(bool)arg1;
- (void)_setLayoutDebuggingIdentifier:(id)arg1;
- (void)_setLayoutEngine:(id)arg1;
- (void)_setLayoutEngineHostConstraints:(id)arg1;
- (void)_setLayoutEngineSuspended:(bool)arg1;
- (void)_setLayoutMarginsGuide:(id)arg1;
- (void)_setMaskView:(id)arg1;
- (void)_setMayRemainFocused:(bool)arg1;
- (void)_setMonitorsSubtree:(bool)arg1;
- (void)_setMultilineContextWidth:(double)arg1;
- (void)_setNeedsContentsFormatUpdate;
- (void)_setNeedsContentsFormatUpdate:(bool)arg1;
- (void)_setNeedsNonDeferredFocusUpdate;
- (void)_setNeedsUpdateConstraints;
- (void)_setNeedsUpdateConstraintsNeedingLayout:(bool)arg1;
- (void)_setPotentiallyHasDanglyConstraints:(bool)arg1;
- (void)_setPreferedContentsFormat:(long long)arg1;
- (void)_setPresentationControllerToNotifyOnLayoutSubviews:(id)arg1;
- (void)_setPreviousFittingSizeInfo:(id)arg1;
- (void)_setPrimitiveContentCompressionResistancePrioritiesValue:(id)arg1;
- (void)_setPrimitiveContentHuggingPrioritiesValue:(id)arg1;
- (void)_setRawLayoutMargins:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)_setReadableContentGuide:(id)arg1;
- (void)_setRenderConfig:(id)arg1;
- (void)_setRotationAnimationProgress:(id)arg1;
- (void)_setShouldArchiveUIAppearanceTags:(bool)arg1;
- (void)_setShouldRasterize:(bool)arg1;
- (void)_setSpeedBumpEdges:(unsigned long long)arg1;
- (void)_setSubviewWantsAutolayoutTripWantsAutolayout:(bool)arg1;
- (void)_setTemplateLayoutView:(id)arg1;
- (void)_setTracksFocusedAncestors:(bool)arg1;
- (void)_setTraitStorageConstraints:(id)arg1;
- (void)_setTraitStorageList:(id)arg1;
- (void)_setTraitStorageSubviews:(id)arg1;
- (void)_setTransformForBackdropMaskViews:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1;
- (void)_setUserInterfaceIdiom:(long long)arg1;
- (void)_setViewDelegate:(id)arg1;
- (void)_setViewsJostledDuringUpdateConstraintsPass:(id)arg1;
- (void)_setVisualAltitude:(double)arg1;
- (void)_setVisualAltitudeBias:(struct CGSize { double x1; double x2; })arg1;
- (void)_setWantsAutolayout;
- (void)_setZoomAnimationProgress:(id)arg1;
- (void)_setZoomScale:(float)arg1 duration:(double)arg2;
- (bool)_shouldAnimatePropertyWithKey:(id)arg1;
- (bool)_shouldApplyExclusiveTouch;
- (bool)_shouldArchiveUIAppearanceTags;
- (bool)_shouldDelayTouchForSystemGestures:(id)arg1;
- (bool)_shouldDirtyLayoutForConstraints;
- (bool)_shouldEnclosedScrollViewFlashIndicators:(id)arg1;
- (bool)_shouldInheritScreenScaleAsContentScaleFactor;
- (bool)_shouldNotifyGeometryObservers;
- (bool)_shouldResignFirstResponderWithInteractionDisabled;
- (bool)_shouldReverseLayoutDirection;
- (bool)_shouldSearchForFocusRegionsInContext:(id)arg1;
- (bool)_shouldSkipNormalLayoutForSakeOfTemplateLayout;
- (bool)_shouldSuspendLayoutEngine;
- (bool)_shouldTryPromoteDescendantToFirstResponder;
- (bool)_shouldUpdateFocusInContext:(id)arg1;
- (bool)_shouldUseKeyboardBackground;
- (unsigned long long)_speedBumpEdges;
- (void)_startGesture:(int)arg1 event:(struct __GSEvent { }*)arg2;
- (void)_startObservingVariablesOnlyToSupportTAMICChange:(bool)arg1;
- (bool)_startRotationFromEvent:(struct __GSEvent { }*)arg1;
- (bool)_startZoomFromEvent:(struct __GSEvent { }*)arg1;
- (id)_stashedLayoutVariableObservations;
- (id)_stashedLayoutVariableObservationsCreateIfNecessary;
- (void)_stopGesture:(int)arg1 event:(struct __GSEvent { }*)arg2;
- (void)_stopObservingVariablesOnlyToSupportTAMICChange:(bool)arg1;
- (void)_stopRotationFromEvent:(struct __GSEvent { }*)arg1;
- (void)_stopZoomFromEvent:(struct __GSEvent { }*)arg1;
- (bool)_strictDescendantNeedsDoubleUpdateConstraints;
- (void)_strokeClippedViewIfNecessary;
- (int)_style;
- (bool)_subclassImplementsDrawRect;
- (bool)_subclassImplementsIntrinsicContentSize;
- (bool)_subclassImplementsIntrinsicSizeWithinSize;
- (bool)_subclassImplementsViewForBaselineLayout;
- (void)_subscribeToScrollNotificationsIfNecessary:(id)arg1;
- (id)_subviewAtIndex:(long long)arg1;
- (bool)_subviewWantsAutolayout;
- (id)_superDescription;
- (bool)_supportsBecomeFirstResponderWhenPossible;
- (bool)_supportsContentDimensionVariables;
- (void)_switchToLayoutEngine:(id)arg1;
- (void)_synchronizeAutoLayoutWithCALayoutForHierarchyChangeIfApplicable;
- (struct CGSize { double x1; double x2; })_systemLayoutSizeFittingSize:(struct CGSize { double x1; double x2; })arg1 withHorizontalFittingPriority:(float)arg2 verticalFittingPriority:(float)arg3;
- (struct CGSize { double x1; double x2; })_systemLayoutSizeFittingSize:(struct CGSize { double x1; double x2; })arg1 withHorizontalFittingPriority:(float)arg2 verticalFittingPriority:(float)arg3 hasIntentionallyCollapsedHeight:(bool*)arg4;
- (id)_templateLayoutView;
- (double)_textButtonMargin;
- (id)_tintColorArchivingKey;
- (long long)_topToBottomLeftToRightViewCompare:(id)arg1;
- (id)_touchForceObservable;
- (double)_touchSloppinessFactor;
- (bool)_touchesInsideShouldHideCalloutBar;
- (bool)_tracksFocusedAncestors;
- (void)_traitCollectionDidChangeFromOldCollection:(id)arg1 toNewCollection:(id)arg2 scaleDidChange:(bool)arg3;
- (id)_traitCollectionForChildEnvironment:(id)arg1;
- (id)_traitStorageConstraints;
- (id)_traitStorageSubviews;
- (bool)_tryRetain;
- (bool)_tryToAddConstraint:(id)arg1 roundingAdjustment:(double)arg2 mutuallyExclusiveConstraints:(id*)arg3;
- (bool)_tryToAddConstraintWithoutUpdatingConstraintsArray:(id)arg1 roundingAdjustment:(double)arg2 mutuallyExclusiveConstraints:(id*)arg3;
- (bool)_uiib_hostsLayoutEngine;
- (void)_uiib_invalidateAutoresizingConstraints;
- (id)_uiib_layoutEngineCreatingIfNecessary;
- (void)_uiib_setHostsLayoutEngine:(bool)arg1;
- (bool)_uiib_tryToAddConstraint:(id)arg1 roundingAdjustment:(double)arg2 mutuallyExclusiveConstraints:(id*)arg3;
- (id)_uili_existingBaseFrameVariables;
- (id)_uili_existingLayoutVariables;
- (id)_uili_observableLayoutEngineForBaseFrameVariables:(bool)arg1;
- (void)_uili_removeLayoutVariableObservationsOnlyToSupportTAMICChange:(bool)arg1;
- (bool)_uili_requiresObservationForVariable:(id)arg1;
- (void)_uili_stashLayoutVariableObservation:(id)arg1 forVariable:(id)arg2;
- (bool)_unapplyMotionEffect:(id)arg1;
- (id)_undimmedTintColor;
- (void)_unregisterAllMotionEffects;
- (void)_unregisterAsReferenceView;
- (void)_unregisterForGeometryChanges;
- (void)_unregisterFromAnimators;
- (void)_unstrokeClippedViewIfNecessary;
- (void)_unsubscribeToScrollNotificationsIfNecessary:(id)arg1;
- (void)_updateAutoresizingConstraints;
- (void)_updateBackdropMaskFrames;
- (void)_updateBackdropMaskViewsInScrollView:(id)arg1;
- (void)_updateConstraintsAsNecessaryAndApplyLayoutFromEngine;
- (void)_updateConstraintsAtEngineLevelIfNeeded;
- (void)_updateConstraintsAtEngineLevelIfNeededWithViewForVariableChangeNotifications:(id)arg1;
- (void)_updateConstraintsIfNeededCollectingViews:(id)arg1 forSecondPass:(bool)arg2;
- (void)_updateConstraintsIfNeededWithViewForVariableChangeNotifications:(id)arg1;
- (void)_updateContentSizeConstraints;
- (void)_updateDirectionalConstraintsIfNeeded;
- (void)_updateInferredLayoutMargins;
- (void)_updateLayoutEngineHostConstraints;
- (void)_updateLayoutMarginsGuideConstraintsIfApplicable;
- (void)_updateNeedsDisplayOnBoundsChange;
- (void)_updateParallaxEffectWithAltitude:(double)arg1 bias:(struct CGSize { double x1; double x2; })arg2;
- (void)_updateSubviewFramesFromTemplateLayoutView:(id)arg1;
- (void)_updateSystemConstraints;
- (void)_updateTemplateViewLayoutIfNeeded;
- (bool)_useContentDimensionVariablesForConstraintLowering;
- (long long)_userInterfaceIdiom;
- (bool)_usesAutoresizingConstraints;
- (bool)_usesHostedLayoutEngineForFittingSizeCalculation;
- (bool)_usesLayoutEngineHostingConstraints;
- (void)_validateLayoutHashHasChangedWithLayoutTime:(double)arg1;
- (id)_variantOfColor:(id)arg1 forKey:(const void*)arg2 withCreationBlock:(id /* block */)arg3;
- (void)_vendedBaselineViewDidMoveForFirst:(bool)arg1;
- (void)_vendedBaselineViewParametersDidChange;
- (id)_viewControllerForAncestor;
- (id)_viewControllerToNotifyOnLayoutSubviews;
- (id)_viewDelegate;
- (id)_viewForBaselineLayout;
- (id)_viewForBaselineLayoutAttribute:(int)arg1;
- (id)_viewForBaselineLayoutAttribute:(int)arg1 suppressHierarchyCheck:(bool)arg2;
- (void)_viewHierarchyUnpreparedForConstraint:(id)arg1;
- (id)_viewIndexPath;
- (long long)_viewOrderRelativeToView:(id)arg1;
- (id)_viewsJostledDuringUpdateConstraintsPass;
- (id)_viewsJostledDuringUpdateConstraintsPassSuppressingDebugAssertion:(bool)arg1;
- (double)_visualAltitude;
- (struct CGSize { double x1; double x2; })_visualAltitudeBias;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_visualAltitudeSensitiveBoundsWithInfiniteEdges:(unsigned long long)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_visualAltitudeSensitiveBoundsWithVisualAltitude:(double)arg1 edges:(unsigned long long)arg2;
- (bool)_wantsAutolayout;
- (bool)_wantsBaselineUpdatingFollowingConstraintsPass;
- (bool)_wantsDeepDrawing;
- (bool)_wantsGeometryChangeNotification;
- (bool)_wantsReapplicationOfAutoLayoutWithLayoutDirtyOnEntry:(bool)arg1;
- (void)_webCustomViewWasAddedAsSubviewOfView:(id)arg1;
- (void)_webCustomViewWasRemovedFromSuperview:(id)arg1;
- (void)_webCustomViewWillBeRemovedFromSuperview;
- (id)_whyIsThisViewNotEligibleForFocus;
- (id)_whyIsThisViewNotEligibleForFocusWithLinePrefix:(id)arg1;
- (id)_whyIsThisViewNotFocusable;
- (void)_willChangeToIdiom:(long long)arg1 onScreen:(id)arg2;
- (void)_willChangeToIdiom:(long long)arg1 onScreen:(id)arg2 traverseHierarchy:(bool)arg3;
- (void)_willChangeToIdiomOnScreen:(id)arg1 traverseHierarchy:(bool)arg2;
- (void)_willMoveToWindow:(id)arg1;
- (void)_willMoveToWindow:(id)arg1 withAncestorView:(id)arg2;
- (void)_willRemoveSubviewWantingAutolayout:(id)arg1;
- (void)_willUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (id)_window;
- (void)_withAutomaticEngineOptimizationDisabled:(id /* block */)arg1;
- (void)_withAutomaticEngineOptimizationDisabledIfEngineExists:(id /* block */)arg1;
- (void)_withUnsatisfiableConstraintsLoggingSuspendedIfEngineDelegateExists:(id /* block */)arg1;
- (void)_wrappedProcessDidChangeRecursivelyFromOldTraits:(id)arg1 toCurrentTraits:(id)arg2 scaleDidChange:(bool)arg3 forceNotification:(bool)arg4;
- (float)_zoomAnimationDurationForScale:(double)arg1;
- (float)_zoomAnimationProgress;
- (float)_zoomScale;
- (void)_zoomToEvent:(struct __GSEvent { }*)arg1 scale:(float)arg2 animate:(bool)arg3 constrainScrollPoint:(bool)arg4;
- (void)_zoomToScale:(float)arg1 event:(struct __GSEvent { }*)arg2;
- (void)_zoomToScrollPoint:(struct CGPoint { double x1; double x2; })arg1 scale:(double)arg2 duration:(float)arg3 event:(struct __GSEvent { }*)arg4;
- (void)_zoomToWindowPoint:(struct CGPoint { double x1; double x2; })arg1 scale:(double)arg2 duration:(float)arg3 constrainScrollPoint:(bool)arg4 event:(struct __GSEvent { }*)arg5;
- (bool)_zoomWithEvent:(struct __GSEvent { }*)arg1;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)addAnimation:(id)arg1 forKey:(id)arg2;
- (void)addConstraint:(id)arg1;
- (void)addConstraints:(id)arg1;
- (void)addGestureRecognizer:(id)arg1;
- (void)addLayoutGuide:(id)arg1;
- (void)addMotionEffect:(id)arg1;
- (void)addSubview:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })alignmentRectForFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })alignmentRectInsets;
- (double)alpha;
- (void)animator:(id)arg1 startAnimation:(id)arg2;
- (void)animator:(id)arg1 stopAnimation:(id)arg2;
- (void)applyUpdatesRecursively;
- (void)applyUpdatesRecursively:(bool)arg1 subHierarchyAppearanceState:(long long)arg2 immediateAnimated:(bool)arg3 newChange:(bool)arg4;
- (id)autorelease;
- (bool)autoresizesSubviews;
- (unsigned long long)autoresizingMask;
- (id)backgroundColor;
- (bool)becomeFirstResponder;
- (id)bottomAnchor;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })bounds;
- (void)bringSubviewToFront:(id)arg1;
- (bool)canBecomeFirstResponder;
- (bool)canBecomeFocused;
- (bool)canHandleGestures;
- (bool)cancelMouseTracking;
- (bool)cancelTouchTracking;
- (struct CGPoint { double x1; double x2; })center;
- (id)centerXAnchor;
- (id)centerYAnchor;
- (float)charge;
- (bool)clearsContextBeforeDrawing;
- (bool)clipsToBounds;
- (long long)compareTextEffectsOrdering:(id)arg1;
- (id)constraints;
- (id)constraintsAffectingLayoutForAxis:(long long)arg1;
- (id)constraintsAffectingLayoutForAxis:(long long)arg1 ofItem:(id)arg2;
- (void)constraintsDidChangeInEngine:(id)arg1;
- (bool)containsView:(id)arg1;
- (float)contentCompressionResistancePriorityForAxis:(long long)arg1;
- (float)contentHuggingPriorityForAxis:(long long)arg1;
- (long long)contentMode;
- (double)contentScaleFactor;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })contentStretch;
- (struct CGPoint { double x1; double x2; })convertPoint:(struct CGPoint { double x1; double x2; })arg1 fromCoordinateSpace:(id)arg2;
- (struct CGPoint { double x1; double x2; })convertPoint:(struct CGPoint { double x1; double x2; })arg1 fromView:(id)arg2;
- (struct CGPoint { double x1; double x2; })convertPoint:(struct CGPoint { double x1; double x2; })arg1 toCoordinateSpace:(id)arg2;
- (struct CGPoint { double x1; double x2; })convertPoint:(struct CGPoint { double x1; double x2; })arg1 toView:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 fromCoordinateSpace:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 fromView:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 toCoordinateSpace:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 toView:(id)arg2;
- (struct CGSize { double x1; double x2; })convertSize:(struct CGSize { double x1; double x2; })arg1 fromView:(id)arg2;
- (struct CGSize { double x1; double x2; })convertSize:(struct CGSize { double x1; double x2; })arg1 toView:(id)arg2;
- (struct CGImage { }*)createSnapshotWithRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)dealloc;
- (void)deferredBecomeFirstResponder;
- (bool)deliversButtonsForGesturesToSuperview;
- (bool)deliversTouchesForGesturesToSuperview;
- (id)description;
- (void)didAddSubview:(id)arg1;
- (void)didMoveToSuperview;
- (void)didMoveToWindow;
- (void)didUpdateFocusFromView:(id)arg1;
- (void)didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext { }*)arg2;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 forViewPrintFormatter:(id)arg2;
- (bool)drawViewHierarchyInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)drawViewHierarchyInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 afterScreenUpdates:(bool)arg2;
- (long long)effectiveUserInterfaceLayoutDirection;
- (void)emptySubviewsOfGeneratorSubhierarchy;
- (int)enabledGestures;
- (void)encodeWithCoder:(id)arg1;
- (bool)endEditing:(bool)arg1;
- (id)engine:(id)arg1 markerForConstraintToBreakAmongConstraints:(id)arg2;
- (void)engine:(id)arg1 willBreakConstraint:(id)arg2 dueToMutuallyExclusiveConstraints:(id)arg3;
- (void)exchangeSubviewAtIndex:(long long)arg1 withSubviewAtIndex:(long long)arg2;
- (void)exerciseAmbiguityInLayout;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })extent;
- (id)firstBaselineAnchor;
- (id)focusGuides;
- (id)focusedView;
- (void)focusedViewDidChange;
- (void)focusedViewWillChange;
- (void)forceDisplayIfNeeded;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameForAlignmentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGPoint { double x1; double x2; })frameOrigin;
- (void)gestureChanged:(struct __GSEvent { }*)arg1;
- (id)gestureDelegate;
- (void)gestureEnded:(struct __GSEvent { }*)arg1;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (id)gestureRecognizers;
- (void)gestureStarted:(struct __GSEvent { }*)arg1;
- (bool)gesturesEnabled;
- (bool)hasAmbiguousLayout;
- (id)heightAnchor;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })hitRect;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 forEvent:(struct __GSEvent { }*)arg2;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (bool)inFullyAppearedState;
- (bool)inFullyDisappearedState;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithSize:(struct CGSize { double x1; double x2; })arg1;
- (void)insertSubview:(id)arg1 above:(id)arg2;
- (void)insertSubview:(id)arg1 aboveSubview:(id)arg2;
- (void)insertSubview:(id)arg1 atIndex:(long long)arg2;
- (void)insertSubview:(id)arg1 below:(id)arg2;
- (void)insertSubview:(id)arg1 belowSubview:(id)arg2;
- (id)interactionTintColor;
- (void)interactionTintColorDidChange;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (void)invalidateIntrinsicContentSize;
- (bool)isAccessibilityElementByDefault;
- (bool)isAncestorOfItem:(id)arg1;
- (bool)isDescendantOfView:(id)arg1;
- (bool)isElementAccessibilityExposedToInterfaceBuilder;
- (bool)isEnabled;
- (bool)isExclusiveTouch;
- (bool)isFocused;
- (bool)isHidden;
- (bool)isHiddenOrHasHiddenAncestor;
- (bool)isMultipleTouchEnabled;
- (bool)isOpaque;
- (bool)isUserInteractionEnabled;
- (id)lastBaselineAnchor;
- (id)layer;
- (void)layerWillDraw:(id)arg1;
- (void)layoutBelowIfNeeded;
- (id)layoutGuides;
- (void)layoutIfNeeded;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })layoutMargins;
- (void)layoutMarginsDidChange;
- (bool)layoutMarginsFollowReadableWidth;
- (id)layoutMarginsGuide;
- (void)layoutSublayersOfLayer:(id)arg1;
- (void)layoutSubviews;
- (id)leadingAnchor;
- (id)leftAnchor;
- (id)maskView;
- (id)motionEffects;
- (void)movedFromSuperview:(id)arg1;
- (void)movedFromWindow:(id)arg1;
- (void)movedToSuperview:(id)arg1;
- (void)movedToWindow:(id)arg1;
- (bool)needsDisplay;
- (bool)needsDisplayOnBoundsChange;
- (bool)needsUpdateConstraints;
- (struct CGImage { }*)newSnapshotWithRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)nextResponder;
- (id)nsis_descriptionOfVariable:(id)arg1;
- (bool)nsis_shouldIntegralizeVariable:(id)arg1;
- (void)nsis_valueOfVariable:(id)arg1 didChangeInEngine:(id)arg2;
- (bool)nsis_valueOfVariableIsUserObservable:(id)arg1;
- (void)nsli_addConstraint:(id)arg1;
- (unsigned long long)nsli_autoresizingMask;
- (id)nsli_boundsHeightVariable;
- (id)nsli_boundsWidthVariable;
- (bool)nsli_canHostIndependentVariableAnchor;
- (id)nsli_contentHeightVariable;
- (id)nsli_contentWidthVariable;
- (struct CGSize { double x1; double x2; })nsli_convertSizeFromEngineSpace:(struct CGSize { double x1; double x2; })arg1;
- (struct CGSize { double x1; double x2; })nsli_convertSizeToEngineSpace:(struct CGSize { double x1; double x2; })arg1;
- (id)nsli_description;
- (bool)nsli_descriptionIncludesPointer;
- (struct CGSize { double x1; double x2; })nsli_engineToUserScalingCoefficients;
- (struct CGSize { double x1; double x2; })nsli_engineToUserScalingCoefficientsInEngine:(id)arg1;
- (id)nsli_heightVariable;
- (id)nsli_installedConstraints;
- (bool)nsli_isCollectingConstraintChangesForLaterCoordinatedFlush:(id)arg1;
- (bool)nsli_isFlipped;
- (bool)nsli_isLegalConstraintItem;
- (bool)nsli_isRTL;
- (id)nsli_layoutAnchorForAttribute:(long long)arg1;
- (id)nsli_layoutEngine;
- (bool)nsli_lowerAttribute:(int)arg1 intoExpression:(id)arg2 withCoefficient:(double)arg3 container:(id)arg4;
- (bool)nsli_lowerAttribute:(int)arg1 intoExpression:(id)arg2 withCoefficient:(double)arg3 forConstraint:(id)arg4;
- (bool)nsli_lowerAttribute:(int)arg1 intoExpression:(id)arg2 withCoefficient:(double)arg3 forConstraint:(id)arg4 onBehalfOfLayoutGuide:(id)arg5;
- (double)nsli_marginOffsetForAttribute:(long long)arg1;
- (id)nsli_minXVariable;
- (id)nsli_minYVariable;
- (bool)nsli_removeConstraint:(id)arg1;
- (bool)nsli_resolvedValue:(double*)arg1 forSymbolicConstant:(id)arg2 inConstraint:(id)arg3 error:(id*)arg4;
- (id)nsli_superitem;
- (id)nsli_widthVariable;
- (struct CGPoint { double x1; double x2; })origin;
- (void)performCompletionAppearanceCallbacksForSubHierarchy;
- (void)performCompletionAppearanceCallbacksForSubview:(id)arg1;
- (void)performCompletionCallbacksPending:(bool)arg1;
- (void)performForSubviewsInAllVisualStates:(id /* block */)arg1;
- (bool)pointInside:(struct CGPoint { double x1; double x2; })arg1 forEvent:(struct __GSEvent { }*)arg2;
- (bool)pointInside:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (struct CGPoint { double x1; double x2; })position;
- (id)preferredFocusEnvironments;
- (id)preferredFocusedItem;
- (id)preferredFocusedView;
- (void)prepareViewVisualStateOfViewSubhierarchy;
- (bool)preservesSuperviewLayoutMargins;
- (id)previewingSegueTemplateStorage;
- (id)previousViewModel;
- (id)previousVisualState;
- (void)pushVisualStateRecursively;
- (id)readableContentGuide;
- (id)recursiveDescription;
- (void)recursivelyForceDisplayIfNeeded;
- (void)reduceWidth:(double)arg1;
- (oneway void)release;
- (void)removeAllGestureRecognizers;
- (void)removeConstraint:(id)arg1;
- (void)removeConstraints:(id)arg1;
- (void)removeFromSuperview;
- (void)removeGestureRecognizer:(id)arg1;
- (void)removeLayoutGuide:(id)arg1;
- (void)removeMotionEffect:(id)arg1;
- (id)resizableSnapshotFromRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 withCapInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg2;
- (id)resizableSnapshotViewFromRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 afterScreenUpdates:(bool)arg2 withCapInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg3;
- (id)resizableSnapshotViewFromRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 withCapInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg2;
- (void)resizeSubviewsWithOldSize:(struct CGSize { double x1; double x2; })arg1;
- (void)resizeWithOldSuperviewSize:(struct CGSize { double x1; double x2; })arg1;
- (void)resolvePendingAppearanceCallbacks;
- (void)resolvePendingAppearanceCallbacksRecursivelyInSubHierarchy;
- (void)resolvePendingDisappearanceCallbacksRecursively;
- (void)restoreUserActivityState:(id)arg1;
- (id)retain;
- (unsigned long long)retainCount;
- (id)rightAnchor;
- (void)rotateToDegrees:(float)arg1;
- (float)rotationDegrees;
- (id)scriptingInfoWithChildren;
- (long long)semanticContentAttribute;
- (void)sendAppearanceCallbacksForAppearingViewWithSubHierarchyAppearanceState:(long long)arg1 animated:(bool)arg2 appearingType:(long long)arg3;
- (void)sendAppearanceCallbacksForDisappearingViewWithSubHierarchyAppearanceState:(long long)arg1 animated:(bool)arg2;
- (void)sendSubviewToBack:(id)arg1;
- (void)sendViewDidAppearAnimated:(bool)arg1;
- (void)sendViewDidDisappearAnimated:(bool)arg1;
- (void)sendViewWillAppearAnimated:(bool)arg1;
- (void)sendViewWillDisappearAnimated:(bool)arg1;
- (void)setAlpha:(double)arg1;
- (void)setAutoresizesSubviews:(bool)arg1;
- (void)setAutoresizingMask:(unsigned long long)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setCenter:(struct CGPoint { double x1; double x2; })arg1;
- (void)setCharge:(float)arg1;
- (void)setClearsContext:(bool)arg1;
- (void)setClearsContextBeforeDrawing:(bool)arg1;
- (void)setClipsSubviews:(bool)arg1;
- (void)setClipsToBounds:(bool)arg1;
- (void)setContentCompressionResistancePriority:(float)arg1 forAxis:(long long)arg2;
- (void)setContentHuggingPriority:(float)arg1 forAxis:(long long)arg2;
- (void)setContentMode:(long long)arg1;
- (void)setContentScaleFactor:(double)arg1;
- (void)setContentStretch:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setContentsPosition:(int)arg1;
- (void)setDeliversButtonsForGesturesToSuperview:(bool)arg1;
- (void)setDeliversTouchesForGesturesToSuperview:(bool)arg1;
- (void)setEnabled:(bool)arg1;
- (void)setEnabledGestures:(int)arg1;
- (void)setExclusiveTouch:(bool)arg1;
- (void)setFixedBackgroundPattern:(bool)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 forFields:(int)arg2;
- (void)setFrameOrigin:(struct CGPoint { double x1; double x2; })arg1;
- (void)setGestureDelegate:(id)arg1;
- (void)setGestureRecognizers:(id)arg1;
- (void)setGesturesEnabled:(bool)arg1;
- (void)setHidden:(bool)arg1;
- (void)setInteractionTintColor:(id)arg1;
- (void)setLayoutMargins:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setLayoutMarginsFollowReadableWidth:(bool)arg1;
- (void)setMaskView:(id)arg1;
- (void)setMotionEffects:(id)arg1;
- (void)setMultipleTouchEnabled:(bool)arg1;
- (void)setNeedsDisplay;
- (void)setNeedsDisplayInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setNeedsDisplayOnBoundsChange:(bool)arg1;
- (void)setNeedsFocusUpdate;
- (void)setNeedsLayout;
- (void)setNeedsPreferredFocusedItemUpdate;
- (void)setNeedsUpdateConstraints;
- (void)setNeedsUpdateViewHierarchy;
- (void)setNeedsUpdateViewHierarchyIfSizeChanged;
- (void)setOpaque:(bool)arg1;
- (void)setOrigin:(struct CGPoint { double x1; double x2; })arg1;
- (void)setPosition:(struct CGPoint { double x1; double x2; })arg1;
- (void)setPreservesSuperviewLayoutMargins:(bool)arg1;
- (void)setPreviewingSegueTemplateStorage:(id)arg1;
- (void)setPreviousVisualState:(id)arg1;
- (void)setRotationBy:(float)arg1;
- (void)setRotationDegrees:(float)arg1 duration:(double)arg2;
- (void)setSemanticContentAttribute:(long long)arg1;
- (void)setSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setSkipsSubviewEnumeration:(bool)arg1;
- (void)setTag:(long long)arg1;
- (void)setTapDelegate:(id)arg1;
- (void)setTintAdjustmentMode:(long long)arg1;
- (void)setTintColor:(id)arg1;
- (void)setTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1;
- (void)setTranslatesAutoresizingMaskIntoConstraints:(bool)arg1;
- (void)setUserInteractionEnabled:(bool)arg1;
- (void)setValue:(id)arg1 forGestureAttribute:(int)arg2;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)setViewGenerationInfo:(id)arg1;
- (void)setViewGenerator:(id)arg1;
- (void)setViewTraversalMark:(bool)arg1;
- (void)setViewsWithPendingAppearanceCompletionCallbacks:(id)arg1;
- (void)setVisualState:(id)arg1;
- (void)setWantsDeepColorDrawing:(bool)arg1;
- (void)set_countOfFocusedAncestorTrackingViewsInSubtree:(unsigned long long)arg1;
- (void)set_countOfMotionEffectsInSubtree:(unsigned long long)arg1;
- (bool)shouldChangeFocusedItem:(id)arg1;
- (bool)shouldChangeFocusedItem:(id)arg1 heading:(unsigned long long)arg2;
- (bool)shouldUpdateFocusFromView:(id)arg1 toView:(id)arg2 heading:(unsigned long long)arg3;
- (bool)shouldUpdateFocusInContext:(id)arg1;
- (struct CGSize { double x1; double x2; })size;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (void)sizeToFit;
- (bool)skipsSubviewEnumeration;
- (id)snapshot;
- (id)snapshotView;
- (id)snapshotViewAfterScreenUpdates:(bool)arg1;
- (void)solutionDidChangeInEngine:(id)arg1;
- (id)stateData;
- (int)stateForGestureType:(int)arg1;
- (id)subviews;
- (id)superview;
- (struct CGSize { double x1; double x2; })systemLayoutSizeFittingSize:(struct CGSize { double x1; double x2; })arg1;
- (struct CGSize { double x1; double x2; })systemLayoutSizeFittingSize:(struct CGSize { double x1; double x2; })arg1 withHorizontalFittingPriority:(float)arg2 verticalFittingPriority:(float)arg3;
- (long long)tag;
- (id)tapDelegate;
- (bool)temporaryAppearanceStateClean;
- (int)textEffectsVisibilityLevel;
- (int)textEffectsVisibilityLevelInKeyboardWindow;
- (id)textInputView;
- (long long)tintAdjustmentMode;
- (id)tintColor;
- (void)tintColorDidChange;
- (id)topAnchor;
- (id)trailingAnchor;
- (id)traitCollection;
- (void)traitCollectionDidChange:(id)arg1;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })transform;
- (bool)translatesAutoresizingMaskIntoConstraints;
- (void)updateConstraints;
- (void)updateConstraintsIfNeeded;
- (void)updateFocusIfNeeded;
- (id)updateIfNeeded;
- (void)updateIfNeededRecursively;
- (void)updatePreferredFocusedItemIfNeeded;
- (void)updateUserActivityState:(id)arg1;
- (bool)useBlockyMagnificationInClassic;
- (id)valueForGestureAttribute:(int)arg1;
- (void)viewDidMoveToSuperview;
- (id)viewForBaselineLayout;
- (id)viewForFirstBaselineLayout;
- (id)viewForLastBaselineLayout;
- (id)viewGenerationInfo;
- (id)viewGenerator;
- (long long)viewGeneratorAppearanceState;
- (bool)viewGeneratorNewChange;
- (id)viewPresentation;
- (id)viewPrintFormatter;
- (bool)viewTraversalMark;
- (void)viewWillMoveToSuperview:(id)arg1;
- (id)viewWithTag:(long long)arg1;
- (id)viewsWithPendingAppearanceCompletionCallbacks;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })visibleBounds;
- (id)visualState;
- (bool)wantsDeepColorDrawing;
- (id)widthAnchor;
- (void)willMoveToSuperview:(id)arg1;
- (void)willMoveToWindow:(id)arg1;
- (void)willRemoveSubview:(id)arg1;
- (void)willUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (void)willUpdateFocusToView:(id)arg1;
- (id)window;
- (void)zoomToScale:(float)arg1;

@end
